<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.9.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.9.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="clabel" val="clock"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(1060,1970)" name="Constant"/>
    <comp lib="0" loc="(1060,2010)" name="Constant"/>
    <comp lib="0" loc="(1210,1400)" name="Tunnel">
      <a name="label" val="stop_cache_D"/>
    </comp>
    <comp lib="0" loc="(1230,990)" name="Tunnel">
      <a name="label" val="addr_ram_in_i"/>
      <a name="width" val="14"/>
    </comp>
    <comp lib="0" loc="(1260,1110)" name="Tunnel">
      <a name="label" val="ram_read_enable_i"/>
    </comp>
    <comp lib="0" loc="(1310,940)" name="Constant">
      <a name="value" val="0x0"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1390,2030)" name="Tunnel">
      <a name="label" val="stop_cache_D"/>
    </comp>
    <comp lib="0" loc="(140,1320)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="addr_ram_in_i"/>
      <a name="width" val="14"/>
    </comp>
    <comp lib="0" loc="(1410,1930)" name="Tunnel">
      <a name="label" val="ram_read_enable_d"/>
    </comp>
    <comp lib="0" loc="(1450,1630)" name="Clock"/>
    <comp lib="0" loc="(1460,1850)" name="Tunnel">
      <a name="label" val="load_result"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1500,1630)" name="Tunnel">
      <a name="label" val="clock"/>
    </comp>
    <comp lib="0" loc="(1570,1050)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="1"/>
      <a name="bit11" val="1"/>
      <a name="bit12" val="2"/>
      <a name="bit13" val="2"/>
      <a name="bit14" val="2"/>
      <a name="bit15" val="3"/>
      <a name="bit16" val="3"/>
      <a name="bit17" val="3"/>
      <a name="bit18" val="3"/>
      <a name="bit19" val="3"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="4"/>
      <a name="bit21" val="4"/>
      <a name="bit22" val="4"/>
      <a name="bit23" val="4"/>
      <a name="bit24" val="4"/>
      <a name="bit25" val="5"/>
      <a name="bit26" val="5"/>
      <a name="bit27" val="5"/>
      <a name="bit28" val="5"/>
      <a name="bit29" val="5"/>
      <a name="bit3" val="0"/>
      <a name="bit30" val="5"/>
      <a name="bit31" val="5"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="1"/>
      <a name="bit8" val="1"/>
      <a name="bit9" val="1"/>
      <a name="fanout" val="6"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(160,1350)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="addr_ram_in_d"/>
      <a name="width" val="14"/>
    </comp>
    <comp lib="0" loc="(160,1380)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="stop_cache_D"/>
    </comp>
    <comp lib="0" loc="(160,1560)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="ram_data_out"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1610,1430)" name="Tunnel">
      <a name="label" val="stop_cache_D"/>
    </comp>
    <comp lib="0" loc="(1660,1380)" name="Ground">
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(1730,1110)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="WriteData"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1770,1080)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="Destino"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(180,1430)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="ram_write_enable"/>
    </comp>
    <comp lib="0" loc="(180,1470)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="ram_read_enable_i"/>
    </comp>
    <comp lib="0" loc="(180,1510)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="ram_read_enable_d"/>
    </comp>
    <comp lib="0" loc="(1810,1110)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="Write"/>
    </comp>
    <comp lib="0" loc="(1870,1590)" name="Splitter">
      <a name="bit0" val="none"/>
      <a name="bit1" val="none"/>
      <a name="bit10" val="none"/>
      <a name="bit11" val="none"/>
      <a name="bit12" val="none"/>
      <a name="bit13" val="none"/>
      <a name="bit14" val="none"/>
      <a name="bit15" val="none"/>
      <a name="bit16" val="none"/>
      <a name="bit17" val="none"/>
      <a name="bit18" val="none"/>
      <a name="bit19" val="none"/>
      <a name="bit2" val="none"/>
      <a name="bit20" val="0"/>
      <a name="bit21" val="0"/>
      <a name="bit22" val="0"/>
      <a name="bit23" val="0"/>
      <a name="bit24" val="0"/>
      <a name="bit25" val="0"/>
      <a name="bit26" val="0"/>
      <a name="bit27" val="0"/>
      <a name="bit28" val="0"/>
      <a name="bit29" val="0"/>
      <a name="bit3" val="none"/>
      <a name="bit30" val="0"/>
      <a name="bit31" val="0"/>
      <a name="bit4" val="none"/>
      <a name="bit5" val="none"/>
      <a name="bit6" val="none"/>
      <a name="bit7" val="none"/>
      <a name="bit8" val="none"/>
      <a name="bit9" val="none"/>
      <a name="fanout" val="1"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(1870,650)" name="Splitter">
      <a name="bit0" val="none"/>
      <a name="bit1" val="none"/>
      <a name="bit10" val="0"/>
      <a name="bit11" val="0"/>
      <a name="bit12" val="none"/>
      <a name="bit13" val="none"/>
      <a name="bit14" val="none"/>
      <a name="bit15" val="none"/>
      <a name="bit16" val="none"/>
      <a name="bit17" val="none"/>
      <a name="bit18" val="none"/>
      <a name="bit19" val="none"/>
      <a name="bit2" val="none"/>
      <a name="bit20" val="none"/>
      <a name="bit21" val="none"/>
      <a name="bit22" val="none"/>
      <a name="bit23" val="none"/>
      <a name="bit24" val="none"/>
      <a name="bit25" val="1"/>
      <a name="bit26" val="1"/>
      <a name="bit27" val="1"/>
      <a name="bit28" val="1"/>
      <a name="bit29" val="1"/>
      <a name="bit3" val="none"/>
      <a name="bit30" val="1"/>
      <a name="bit31" val="1"/>
      <a name="bit4" val="none"/>
      <a name="bit5" val="none"/>
      <a name="bit6" val="none"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="0"/>
      <a name="bit9" val="0"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(1900,1810)" name="Tunnel">
      <a name="label" val="addr_ram_in_d"/>
      <a name="width" val="14"/>
    </comp>
    <comp lib="0" loc="(1920,670)" name="Constant">
      <a name="value" val="0x0"/>
      <a name="width" val="20"/>
    </comp>
    <comp lib="0" loc="(1930,150)" name="Splitter">
      <a name="bit0" val="1"/>
      <a name="bit10" val="1"/>
      <a name="bit11" val="1"/>
      <a name="bit12" val="1"/>
      <a name="bit13" val="1"/>
      <a name="bit14" val="1"/>
      <a name="bit15" val="1"/>
      <a name="bit16" val="1"/>
      <a name="bit17" val="1"/>
      <a name="bit18" val="1"/>
      <a name="bit19" val="1"/>
      <a name="bit2" val="1"/>
      <a name="bit20" val="0"/>
      <a name="bit21" val="0"/>
      <a name="bit22" val="0"/>
      <a name="bit23" val="0"/>
      <a name="bit24" val="0"/>
      <a name="bit25" val="0"/>
      <a name="bit26" val="0"/>
      <a name="bit27" val="0"/>
      <a name="bit28" val="0"/>
      <a name="bit29" val="0"/>
      <a name="bit3" val="1"/>
      <a name="bit30" val="0"/>
      <a name="bit31" val="0"/>
      <a name="bit4" val="1"/>
      <a name="bit5" val="1"/>
      <a name="bit6" val="1"/>
      <a name="bit7" val="1"/>
      <a name="bit8" val="1"/>
      <a name="bit9" val="1"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(1930,1590)" name="Constant">
      <a name="value" val="0x0"/>
      <a name="width" val="20"/>
    </comp>
    <comp lib="0" loc="(1930,290)" name="Splitter">
      <a name="bit0" val="none"/>
      <a name="bit1" val="none"/>
      <a name="bit10" val="none"/>
      <a name="bit11" val="none"/>
      <a name="bit12" val="1"/>
      <a name="bit13" val="1"/>
      <a name="bit14" val="1"/>
      <a name="bit15" val="1"/>
      <a name="bit16" val="1"/>
      <a name="bit17" val="1"/>
      <a name="bit18" val="1"/>
      <a name="bit19" val="1"/>
      <a name="bit2" val="none"/>
      <a name="bit20" val="2"/>
      <a name="bit21" val="3"/>
      <a name="bit22" val="3"/>
      <a name="bit23" val="3"/>
      <a name="bit24" val="3"/>
      <a name="bit25" val="3"/>
      <a name="bit26" val="3"/>
      <a name="bit27" val="3"/>
      <a name="bit28" val="3"/>
      <a name="bit29" val="3"/>
      <a name="bit3" val="none"/>
      <a name="bit30" val="3"/>
      <a name="bit31" val="0"/>
      <a name="bit4" val="none"/>
      <a name="bit5" val="none"/>
      <a name="bit6" val="none"/>
      <a name="bit7" val="none"/>
      <a name="bit8" val="none"/>
      <a name="bit9" val="none"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(1930,400)" name="Splitter">
      <a name="bit0" val="none"/>
      <a name="bit1" val="none"/>
      <a name="bit10" val="3"/>
      <a name="bit11" val="3"/>
      <a name="bit12" val="none"/>
      <a name="bit13" val="none"/>
      <a name="bit14" val="none"/>
      <a name="bit15" val="none"/>
      <a name="bit16" val="none"/>
      <a name="bit17" val="none"/>
      <a name="bit18" val="none"/>
      <a name="bit19" val="none"/>
      <a name="bit2" val="none"/>
      <a name="bit20" val="none"/>
      <a name="bit21" val="none"/>
      <a name="bit22" val="none"/>
      <a name="bit23" val="none"/>
      <a name="bit24" val="none"/>
      <a name="bit25" val="2"/>
      <a name="bit26" val="2"/>
      <a name="bit27" val="2"/>
      <a name="bit28" val="2"/>
      <a name="bit29" val="2"/>
      <a name="bit3" val="none"/>
      <a name="bit30" val="2"/>
      <a name="bit31" val="0"/>
      <a name="bit4" val="none"/>
      <a name="bit5" val="none"/>
      <a name="bit6" val="none"/>
      <a name="bit7" val="1"/>
      <a name="bit8" val="3"/>
      <a name="bit9" val="3"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(1950,1570)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="0"/>
      <a name="bit11" val="0"/>
      <a name="bit12" val="1"/>
      <a name="bit13" val="1"/>
      <a name="bit14" val="1"/>
      <a name="bit15" val="1"/>
      <a name="bit16" val="1"/>
      <a name="bit17" val="1"/>
      <a name="bit18" val="1"/>
      <a name="bit19" val="1"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="1"/>
      <a name="bit21" val="1"/>
      <a name="bit22" val="1"/>
      <a name="bit23" val="1"/>
      <a name="bit24" val="1"/>
      <a name="bit25" val="1"/>
      <a name="bit26" val="1"/>
      <a name="bit27" val="1"/>
      <a name="bit28" val="1"/>
      <a name="bit29" val="1"/>
      <a name="bit3" val="0"/>
      <a name="bit30" val="1"/>
      <a name="bit31" val="1"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="0"/>
      <a name="bit9" val="0"/>
      <a name="facing" val="west"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(1960,620)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="1"/>
      <a name="bit11" val="1"/>
      <a name="bit12" val="2"/>
      <a name="bit13" val="2"/>
      <a name="bit14" val="2"/>
      <a name="bit15" val="2"/>
      <a name="bit16" val="2"/>
      <a name="bit17" val="2"/>
      <a name="bit18" val="2"/>
      <a name="bit19" val="2"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="2"/>
      <a name="bit21" val="2"/>
      <a name="bit22" val="2"/>
      <a name="bit23" val="2"/>
      <a name="bit24" val="2"/>
      <a name="bit25" val="2"/>
      <a name="bit26" val="2"/>
      <a name="bit27" val="2"/>
      <a name="bit28" val="2"/>
      <a name="bit29" val="2"/>
      <a name="bit3" val="0"/>
      <a name="bit30" val="2"/>
      <a name="bit31" val="2"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="1"/>
      <a name="bit6" val="1"/>
      <a name="bit7" val="1"/>
      <a name="bit8" val="1"/>
      <a name="bit9" val="1"/>
      <a name="facing" val="west"/>
      <a name="fanout" val="3"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(1990,1890)" name="Tunnel">
      <a name="label" val="ram_data_out"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1990,240)" name="Splitter">
      <a name="bit0" val="3"/>
      <a name="bit1" val="3"/>
      <a name="bit10" val="2"/>
      <a name="bit11" val="1"/>
      <a name="bit12" val="1"/>
      <a name="bit13" val="1"/>
      <a name="bit14" val="1"/>
      <a name="bit15" val="1"/>
      <a name="bit16" val="1"/>
      <a name="bit17" val="1"/>
      <a name="bit18" val="1"/>
      <a name="bit19" val="0"/>
      <a name="bit2" val="3"/>
      <a name="bit4" val="3"/>
      <a name="bit5" val="3"/>
      <a name="bit6" val="3"/>
      <a name="bit7" val="3"/>
      <a name="bit8" val="3"/>
      <a name="bit9" val="3"/>
      <a name="facing" val="west"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="20"/>
    </comp>
    <comp lib="0" loc="(1990,350)" name="Splitter">
      <a name="bit0" val="3"/>
      <a name="bit1" val="3"/>
      <a name="bit10" val="1"/>
      <a name="bit11" val="0"/>
      <a name="bit2" val="3"/>
      <a name="bit4" val="2"/>
      <a name="bit5" val="2"/>
      <a name="bit6" val="2"/>
      <a name="bit7" val="2"/>
      <a name="bit8" val="2"/>
      <a name="bit9" val="2"/>
      <a name="facing" val="west"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="12"/>
    </comp>
    <comp lib="0" loc="(2010,250)" name="Ground"/>
    <comp lib="0" loc="(2010,360)" name="Ground"/>
    <comp lib="0" loc="(2050,230)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="0"/>
      <a name="bit11" val="0"/>
      <a name="bit12" val="0"/>
      <a name="bit13" val="0"/>
      <a name="bit14" val="0"/>
      <a name="bit15" val="0"/>
      <a name="bit16" val="0"/>
      <a name="bit17" val="0"/>
      <a name="bit18" val="0"/>
      <a name="bit19" val="0"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="1"/>
      <a name="bit3" val="0"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="0"/>
      <a name="bit9" val="0"/>
      <a name="facing" val="west"/>
      <a name="incoming" val="21"/>
    </comp>
    <comp lib="0" loc="(2050,340)" name="Splitter">
      <a name="bit0" val="1"/>
      <a name="bit1" val="0"/>
      <a name="bit10" val="0"/>
      <a name="bit11" val="0"/>
      <a name="bit12" val="0"/>
      <a name="bit2" val="0"/>
      <a name="bit3" val="0"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="0"/>
      <a name="bit9" val="0"/>
      <a name="facing" val="west"/>
      <a name="incoming" val="13"/>
    </comp>
    <comp lib="0" loc="(2060,270)" name="Constant">
      <a name="value" val="0x2"/>
      <a name="width" val="21"/>
    </comp>
    <comp lib="0" loc="(2060,380)" name="Constant">
      <a name="value" val="0x2"/>
      <a name="width" val="13"/>
    </comp>
    <comp lib="0" loc="(2080,1980)" name="Tunnel">
      <a name="label" val="ram_write_enable"/>
    </comp>
    <comp lib="0" loc="(2150,1100)" name="Tunnel">
      <a name="facing" val="south"/>
      <a name="label" val="store_write_data"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2150,990)" name="Tunnel">
      <a name="facing" val="south"/>
      <a name="label" val="base_position"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(220,940)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="NewPC"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(220,980)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="ModifiedPC"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(260,990)" name="Tunnel">
      <a name="label" val="branch_taken"/>
    </comp>
    <comp lib="0" loc="(2660,1470)" name="Tunnel">
      <a name="label" val="stop_cache_D"/>
    </comp>
    <comp lib="0" loc="(2690,620)" name="Tunnel">
      <a name="label" val="store_offset"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2730,1270)" name="Tunnel">
      <a name="label" val="load_offset"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2730,860)" name="Tunnel">
      <a name="label" val="PC_Actual"/>
      <a name="width" val="14"/>
    </comp>
    <comp lib="0" loc="(280,950)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="0"/>
      <a name="bit11" val="0"/>
      <a name="bit12" val="0"/>
      <a name="bit13" val="0"/>
      <a name="bit14" val="none"/>
      <a name="bit15" val="none"/>
      <a name="bit16" val="none"/>
      <a name="bit17" val="none"/>
      <a name="bit18" val="none"/>
      <a name="bit19" val="none"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="none"/>
      <a name="bit21" val="none"/>
      <a name="bit22" val="none"/>
      <a name="bit23" val="none"/>
      <a name="bit24" val="none"/>
      <a name="bit25" val="none"/>
      <a name="bit26" val="none"/>
      <a name="bit27" val="none"/>
      <a name="bit28" val="none"/>
      <a name="bit29" val="none"/>
      <a name="bit3" val="0"/>
      <a name="bit30" val="none"/>
      <a name="bit31" val="none"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="0"/>
      <a name="bit9" val="0"/>
      <a name="fanout" val="1"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(2810,950)" name="Constant">
      <a name="value" val="0x0"/>
      <a name="width" val="18"/>
    </comp>
    <comp lib="0" loc="(2830,930)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="0"/>
      <a name="bit11" val="0"/>
      <a name="bit12" val="0"/>
      <a name="bit13" val="0"/>
      <a name="bit14" val="1"/>
      <a name="bit15" val="1"/>
      <a name="bit16" val="1"/>
      <a name="bit17" val="1"/>
      <a name="bit18" val="1"/>
      <a name="bit19" val="1"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="1"/>
      <a name="bit21" val="1"/>
      <a name="bit22" val="1"/>
      <a name="bit23" val="1"/>
      <a name="bit24" val="1"/>
      <a name="bit25" val="1"/>
      <a name="bit26" val="1"/>
      <a name="bit27" val="1"/>
      <a name="bit28" val="1"/>
      <a name="bit29" val="1"/>
      <a name="bit3" val="0"/>
      <a name="bit30" val="1"/>
      <a name="bit31" val="1"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="0"/>
      <a name="bit9" val="0"/>
      <a name="facing" val="west"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(2890,1050)" name="Constant">
      <a name="value" val="0x13"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(2990,1020)" name="Tunnel">
      <a name="label" val="RewritePC"/>
    </comp>
    <comp lib="0" loc="(310,910)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="clock"/>
    </comp>
    <comp lib="0" loc="(3330,830)" name="Constant">
      <a name="value" val="0x14"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(3350,530)" name="Tunnel">
      <a name="label" val="can_write_ra"/>
    </comp>
    <comp lib="0" loc="(3350,560)" name="Tunnel">
      <a name="label" val="return_address"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3360,600)" name="Bit Extender">
      <a name="in_width" val="14"/>
      <a name="out_width" val="32"/>
    </comp>
    <comp lib="0" loc="(3360,640)" name="Tunnel">
      <a name="label" val="branch_taken"/>
    </comp>
    <comp lib="0" loc="(3370,600)" name="Tunnel">
      <a name="label" val="ModifiedPC"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3410,820)" name="Tunnel">
      <a name="label" val="SystemCall"/>
    </comp>
    <comp lib="0" loc="(3440,690)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="base_position"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3590,1090)" name="Tunnel">
      <a name="label" val="NewPC"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3620,820)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="SystemCall"/>
    </comp>
    <comp lib="0" loc="(3710,650)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="load_offset"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3720,620)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="store_offset"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3760,560)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="store_write_data"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3990,1290)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="return_address"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3990,1470)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="can_write_ra"/>
    </comp>
    <comp lib="0" loc="(4060,1560)" name="Tunnel">
      <a name="label" val="stop_cache_D"/>
    </comp>
    <comp lib="0" loc="(4190,630)" name="Tunnel">
      <a name="label" val="addr_in"/>
      <a name="width" val="14"/>
    </comp>
    <comp lib="0" loc="(4230,480)" name="Tunnel">
      <a name="label" val="store_write_in"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(4360,890)" name="Tunnel">
      <a name="label" val="Destino"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(4410,1170)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="load_result"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(4420,1240)" name="Constant">
      <a name="value" val="0xc"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(4440,1530)" name="Tunnel">
      <a name="label" val="stop_cache_D"/>
    </comp>
    <comp lib="0" loc="(450,870)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="branch_taken"/>
    </comp>
    <comp lib="0" loc="(4510,940)" name="Constant">
      <a name="value" val="0xd"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(4760,1090)" name="Tunnel">
      <a name="label" val="WriteData"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(480,840)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="RewritePC"/>
    </comp>
    <comp lib="0" loc="(4970,930)" name="Tunnel">
      <a name="label" val="Write"/>
    </comp>
    <comp lib="0" loc="(5370,810)" name="Tunnel">
      <a name="label" val="load_enable"/>
    </comp>
    <comp lib="0" loc="(5580,820)" name="Tunnel">
      <a name="label" val="store_enable"/>
    </comp>
    <comp lib="0" loc="(760,1500)" name="Tunnel">
      <a name="label" val="ram_data_in_i"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(760,1540)" name="Tunnel">
      <a name="label" val="ram_data_in_d"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(760,1580)" name="Tunnel">
      <a name="label" val="stop_cache_D"/>
    </comp>
    <comp lib="0" loc="(880,2010)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="ram_data_in_d"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(890,1920)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="store_write_in"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(890,1950)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="store_enable"/>
    </comp>
    <comp lib="0" loc="(890,1980)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="load_enable"/>
    </comp>
    <comp lib="0" loc="(930,1080)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="ram_data_in_i"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(980,1890)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="addr_in"/>
      <a name="width" val="14"/>
    </comp>
    <comp lib="0" loc="(990,1040)" name="Constant"/>
    <comp lib="0" loc="(990,1060)" name="Constant"/>
    <comp lib="0" loc="(990,1100)" name="Constant"/>
    <comp lib="1" loc="(1040,1380)" name="NOT Gate">
      <a name="facing" val="west"/>
    </comp>
    <comp lib="1" loc="(1080,1380)" name="OR Gate">
      <a name="facing" val="west"/>
    </comp>
    <comp lib="1" loc="(1570,1430)" name="NOT Gate">
      <a name="facing" val="west"/>
    </comp>
    <comp lib="1" loc="(1920,1250)" name="AND Gate"/>
    <comp lib="1" loc="(1920,1330)" name="AND Gate"/>
    <comp lib="1" loc="(2220,1230)" name="AND Gate"/>
    <comp lib="1" loc="(2220,1310)" name="AND Gate"/>
    <comp lib="1" loc="(2620,1470)" name="NOT Gate">
      <a name="facing" val="west"/>
    </comp>
    <comp lib="1" loc="(300,1490)" name="OR Gate"/>
    <comp lib="1" loc="(4020,1560)" name="NOT Gate">
      <a name="facing" val="west"/>
    </comp>
    <comp lib="1" loc="(4400,1530)" name="NOT Gate">
      <a name="facing" val="west"/>
    </comp>
    <comp lib="1" loc="(4720,930)" name="NOT Gate"/>
    <comp lib="1" loc="(4890,810)" name="OR Gate">
      <a name="inputs" val="15"/>
    </comp>
    <comp lib="1" loc="(5300,810)" name="OR Gate"/>
    <comp lib="1" loc="(5570,820)" name="OR Gate"/>
    <comp lib="2" loc="(1370,950)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(2380,1010)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(2380,1130)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(250,1310)" name="Multiplexer">
      <a name="width" val="14"/>
    </comp>
    <comp lib="2" loc="(2550,1020)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(2550,1140)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(270,950)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(2990,980)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(3820,1070)" name="Multiplexer">
      <a name="select" val="5"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(4460,710)" name="Decoder">
      <a name="facing" val="south"/>
      <a name="select" val="5"/>
    </comp>
    <comp lib="2" loc="(4550,1080)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(4730,1090)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(5090,710)" name="Decoder">
      <a name="facing" val="south"/>
      <a name="select" val="5"/>
    </comp>
    <comp lib="2" loc="(530,860)" name="Multiplexer"/>
    <comp lib="2" loc="(700,1520)" name="Demultiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="3" loc="(1720,1370)" name="Comparator">
      <a name="width" val="5"/>
    </comp>
    <comp lib="3" loc="(1790,1230)" name="Comparator">
      <a name="width" val="5"/>
    </comp>
    <comp lib="3" loc="(1790,1310)" name="Comparator">
      <a name="width" val="5"/>
    </comp>
    <comp lib="3" loc="(2080,1210)" name="Comparator">
      <a name="width" val="5"/>
    </comp>
    <comp lib="3" loc="(2080,1290)" name="Comparator">
      <a name="width" val="5"/>
    </comp>
    <comp lib="3" loc="(2130,240)" name="Multiplier">
      <a name="width" val="21"/>
    </comp>
    <comp lib="3" loc="(2130,350)" name="Multiplier">
      <a name="width" val="13"/>
    </comp>
    <comp lib="3" loc="(2940,1040)" name="Comparator">
      <a name="width" val="5"/>
    </comp>
    <comp lib="3" loc="(3380,820)" name="Comparator">
      <a name="width" val="5"/>
    </comp>
    <comp lib="3" loc="(4500,1230)" name="Comparator">
      <a name="width" val="5"/>
    </comp>
    <comp lib="3" loc="(4600,930)" name="Comparator">
      <a name="mode" val="unsigned"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="4" loc="(1470,1020)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="InstFetch"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1780,1780)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="width" val="14"/>
    </comp>
    <comp lib="4" loc="(1890,1860)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1970,1950)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="width" val="1"/>
    </comp>
    <comp lib="4" loc="(2600,100)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="jalr_offset"/>
      <a name="width" val="12"/>
    </comp>
    <comp lib="4" loc="(2600,210)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="jal_offset"/>
      <a name="width" val="21"/>
    </comp>
    <comp lib="4" loc="(2600,320)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="branch_offset"/>
      <a name="width" val="13"/>
    </comp>
    <comp lib="4" loc="(2600,460)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="Instruction01"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(2600,590)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="store_offset_2"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(2610,1110)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="Op2"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(2610,1240)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="Imm2"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(2610,750)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="OpCode2"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="4" loc="(2610,860)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="Destino2"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="4" loc="(2610,990)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="Op1"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(3520,660)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(3910,450)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(4010,280)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="Instruction02"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(4010,450)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="store_data"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(4010,600)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="store_addr"/>
      <a name="width" val="14"/>
    </comp>
    <comp lib="4" loc="(4020,1040)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="Resultado"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(4020,1260)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(4020,1440)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="width" val="1"/>
    </comp>
    <comp lib="4" loc="(4020,750)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="OpCode3"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="4" loc="(4020,860)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="Destino3"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="4" loc="(410,1430)" name="RAM">
      <a name="addrWidth" val="14"/>
      <a name="appearance" val="logisim_evolution"/>
      <a name="dataWidth" val="32"/>
    </comp>
    <comp lib="4" loc="(4100,600)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="width" val="14"/>
    </comp>
    <comp lib="4" loc="(4110,450)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(4280,750)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="mem_OpCode"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="4" loc="(4290,860)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="mem_Destino"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="4" loc="(4320,1040)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="mem_Resultado"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(4330,1260)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="return_address2"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(4340,1370)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="can_write_ra2"/>
      <a name="width" val="1"/>
    </comp>
    <comp lib="4" loc="(580,830)" name="Counter">
      <a name="appearance" val="logisim_evolution"/>
      <a name="max" val="0x3fff"/>
      <a name="width" val="14"/>
    </comp>
    <comp lib="5" loc="(1260,1040)" name="LED">
      <a name="color" val="#00f02c"/>
    </comp>
    <comp lib="5" loc="(1260,1060)" name="LED">
      <a name="color" val="#f00004"/>
    </comp>
    <comp lib="5" loc="(1260,1080)" name="LED">
      <a name="color" val="#f000c0"/>
    </comp>
    <comp lib="5" loc="(1340,1950)" name="LED">
      <a name="color" val="#00f02c"/>
    </comp>
    <comp lib="5" loc="(1340,1970)" name="LED">
      <a name="color" val="#f00004"/>
    </comp>
    <comp lib="5" loc="(1340,1990)" name="LED">
      <a name="color" val="#f000c0"/>
    </comp>
    <comp lib="5" loc="(3660,820)" name="LED"/>
    <comp lib="8" loc="(3580,1280)" name="Text">
      <a name="text" val="Dependiendo de la instruccion, algo diferente tiene que salir"/>
    </comp>
    <comp lib="8" loc="(4170,965)" name="Text">
      <a name="text" val="Registro al que se escribira"/>
    </comp>
    <comp lib="8" loc="(4275,1015)" name="Text">
      <a name="text" val="Datos a escribir en registro"/>
    </comp>
    <comp lib="8" loc="(4540,660)" name="Text">
      <a name="text" val="Este decoder nos dice si una instruccion escribe en registro"/>
    </comp>
    <comp lib="8" loc="(4720,980)" name="Text">
      <a name="text" val="Decide si debe escribirse algo en registro"/>
    </comp>
    <comp loc="(1210,980)" name="cache_instrucciones">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1280,1850)" name="cache_datos">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1880,780)" name="Translator">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1930,1020)" name="Registros">
      <a name="label" val="Regs"/>
    </comp>
    <comp loc="(3280,560)" name="branch_jump">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(3530,1050)" name="ALU">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="ALU1"/>
    </comp>
    <comp loc="(3960,630)" name="addr_calculator"/>
    <wire from="(1000,1310)" to="(1000,1380)"/>
    <wire from="(1000,1380)" to="(1040,1380)"/>
    <wire from="(1030,1930)" to="(1030,1950)"/>
    <wire from="(1030,1930)" to="(1060,1930)"/>
    <wire from="(1030,1990)" to="(1030,2010)"/>
    <wire from="(1030,1990)" to="(1060,1990)"/>
    <wire from="(1040,1950)" to="(1040,1980)"/>
    <wire from="(1040,1950)" to="(1060,1950)"/>
    <wire from="(1060,1910)" to="(1060,1920)"/>
    <wire from="(1070,1380)" to="(1080,1380)"/>
    <wire from="(1130,1360)" to="(1220,1360)"/>
    <wire from="(1130,1400)" to="(1210,1400)"/>
    <wire from="(1210,1000)" to="(1230,1000)"/>
    <wire from="(1210,1020)" to="(1230,1020)"/>
    <wire from="(1210,1040)" to="(1250,1040)"/>
    <wire from="(1210,1060)" to="(1260,1060)"/>
    <wire from="(1210,1080)" to="(1220,1080)"/>
    <wire from="(1210,960)" to="(1210,980)"/>
    <wire from="(1210,960)" to="(1340,960)"/>
    <wire from="(1220,1080)" to="(1220,1360)"/>
    <wire from="(1220,1080)" to="(1260,1080)"/>
    <wire from="(1230,1020)" to="(1230,1110)"/>
    <wire from="(1230,1110)" to="(1260,1110)"/>
    <wire from="(1230,990)" to="(1230,1000)"/>
    <wire from="(1250,1020)" to="(1250,1040)"/>
    <wire from="(1250,1020)" to="(1350,1020)"/>
    <wire from="(1250,1040)" to="(1260,1040)"/>
    <wire from="(1280,1850)" to="(1460,1850)"/>
    <wire from="(1280,1870)" to="(1710,1870)"/>
    <wire from="(1280,1890)" to="(1890,1890)"/>
    <wire from="(1280,1910)" to="(1720,1910)"/>
    <wire from="(1280,1930)" to="(1410,1930)"/>
    <wire from="(1280,1950)" to="(1340,1950)"/>
    <wire from="(1280,1970)" to="(1340,1970)"/>
    <wire from="(1280,1990)" to="(1300,1990)"/>
    <wire from="(1300,1990)" to="(1300,2030)"/>
    <wire from="(1300,1990)" to="(1340,1990)"/>
    <wire from="(1300,2030)" to="(1390,2030)"/>
    <wire from="(1310,940)" to="(1340,940)"/>
    <wire from="(1350,970)" to="(1350,1020)"/>
    <wire from="(1370,950)" to="(1410,950)"/>
    <wire from="(140,1320)" to="(150,1320)"/>
    <wire from="(1410,1050)" to="(1470,1050)"/>
    <wire from="(1410,950)" to="(1410,1050)"/>
    <wire from="(1430,1070)" to="(1430,1430)"/>
    <wire from="(1430,1070)" to="(1470,1070)"/>
    <wire from="(1430,1430)" to="(1570,1430)"/>
    <wire from="(1450,1630)" to="(1460,1630)"/>
    <wire from="(1460,1090)" to="(1460,1570)"/>
    <wire from="(1460,1090)" to="(1470,1090)"/>
    <wire from="(1460,1570)" to="(1460,1630)"/>
    <wire from="(1460,1630)" to="(1480,1630)"/>
    <wire from="(1480,1610)" to="(1480,1630)"/>
    <wire from="(1480,1610)" to="(1660,1610)"/>
    <wire from="(1480,1630)" to="(1500,1630)"/>
    <wire from="(150,1300)" to="(150,1320)"/>
    <wire from="(150,1300)" to="(220,1300)"/>
    <wire from="(1530,1050)" to="(1550,1050)"/>
    <wire from="(1550,1050)" to="(1550,1590)"/>
    <wire from="(1550,1050)" to="(1570,1050)"/>
    <wire from="(1550,150)" to="(1550,300)"/>
    <wire from="(1550,150)" to="(1930,150)"/>
    <wire from="(1550,1590)" to="(1870,1590)"/>
    <wire from="(1550,300)" to="(1550,410)"/>
    <wire from="(1550,300)" to="(1930,300)"/>
    <wire from="(1550,410)" to="(1550,490)"/>
    <wire from="(1550,410)" to="(1930,410)"/>
    <wire from="(1550,490)" to="(1550,650)"/>
    <wire from="(1550,490)" to="(2600,490)"/>
    <wire from="(1550,650)" to="(1550,1050)"/>
    <wire from="(1550,650)" to="(1870,650)"/>
    <wire from="(1570,1430)" to="(1580,1430)"/>
    <wire from="(1590,1000)" to="(1910,1000)"/>
    <wire from="(1590,1010)" to="(1630,1010)"/>
    <wire from="(1590,1020)" to="(1670,1020)"/>
    <wire from="(1590,1030)" to="(1660,1030)"/>
    <wire from="(1590,1040)" to="(1650,1040)"/>
    <wire from="(1590,780)" to="(1590,990)"/>
    <wire from="(1590,780)" to="(1660,780)"/>
    <wire from="(160,1350)" to="(170,1350)"/>
    <wire from="(160,1380)" to="(230,1380)"/>
    <wire from="(160,1560)" to="(340,1560)"/>
    <wire from="(1600,1430)" to="(1610,1430)"/>
    <wire from="(1630,800)" to="(1630,1010)"/>
    <wire from="(1630,800)" to="(1660,800)"/>
    <wire from="(1640,1240)" to="(1640,1320)"/>
    <wire from="(1640,1240)" to="(1750,1240)"/>
    <wire from="(1640,1320)" to="(1640,1360)"/>
    <wire from="(1640,1320)" to="(1750,1320)"/>
    <wire from="(1640,1360)" to="(1680,1360)"/>
    <wire from="(1640,860)" to="(1640,1240)"/>
    <wire from="(1640,860)" to="(2680,860)"/>
    <wire from="(1650,820)" to="(1650,1040)"/>
    <wire from="(1650,820)" to="(1660,820)"/>
    <wire from="(1660,1030)" to="(1660,1280)"/>
    <wire from="(1660,1030)" to="(1690,1030)"/>
    <wire from="(1660,1280)" to="(1660,1300)"/>
    <wire from="(1660,1280)" to="(2040,1280)"/>
    <wire from="(1660,1300)" to="(1750,1300)"/>
    <wire from="(1660,1380)" to="(1680,1380)"/>
    <wire from="(1660,1610)" to="(1660,1850)"/>
    <wire from="(1660,1610)" to="(2590,1610)"/>
    <wire from="(1660,1850)" to="(1750,1850)"/>
    <wire from="(1670,1020)" to="(1670,1200)"/>
    <wire from="(1670,1020)" to="(1710,1020)"/>
    <wire from="(1670,1200)" to="(1670,1220)"/>
    <wire from="(1670,1200)" to="(2040,1200)"/>
    <wire from="(1670,1220)" to="(1750,1220)"/>
    <wire from="(1690,1030)" to="(1690,1060)"/>
    <wire from="(1690,1060)" to="(1710,1060)"/>
    <wire from="(170,1320)" to="(170,1350)"/>
    <wire from="(170,1320)" to="(220,1320)"/>
    <wire from="(1710,1810)" to="(1710,1870)"/>
    <wire from="(1710,1810)" to="(1780,1810)"/>
    <wire from="(1720,1360)" to="(1800,1360)"/>
    <wire from="(1720,1910)" to="(1720,1980)"/>
    <wire from="(1720,1980)" to="(1970,1980)"/>
    <wire from="(1730,1070)" to="(1730,1110)"/>
    <wire from="(1750,1850)" to="(1750,1930)"/>
    <wire from="(1750,1850)" to="(1780,1850)"/>
    <wire from="(1750,1930)" to="(1850,1930)"/>
    <wire from="(1770,1070)" to="(1770,1080)"/>
    <wire from="(1790,1230)" to="(1870,1230)"/>
    <wire from="(1790,1310)" to="(1870,1310)"/>
    <wire from="(180,1430)" to="(350,1430)"/>
    <wire from="(180,1470)" to="(250,1470)"/>
    <wire from="(180,1510)" to="(250,1510)"/>
    <wire from="(1800,1270)" to="(1800,1360)"/>
    <wire from="(1800,1270)" to="(1870,1270)"/>
    <wire from="(1800,1360)" to="(1860,1360)"/>
    <wire from="(1810,1070)" to="(1810,1110)"/>
    <wire from="(1840,1810)" to="(1900,1810)"/>
    <wire from="(1850,1930)" to="(1850,2020)"/>
    <wire from="(1850,1930)" to="(1890,1930)"/>
    <wire from="(1850,2020)" to="(1970,2020)"/>
    <wire from="(1860,1350)" to="(1860,1360)"/>
    <wire from="(1860,1350)" to="(1870,1350)"/>
    <wire from="(1860,1360)" to="(2090,1360)"/>
    <wire from="(1880,1070)" to="(1880,1180)"/>
    <wire from="(1880,1180)" to="(2590,1180)"/>
    <wire from="(1880,780)" to="(2610,780)"/>
    <wire from="(1890,1580)" to="(1930,1580)"/>
    <wire from="(1890,630)" to="(1940,630)"/>
    <wire from="(1890,640)" to="(1940,640)"/>
    <wire from="(1910,890)" to="(1910,1000)"/>
    <wire from="(1910,890)" to="(2610,890)"/>
    <wire from="(1920,1250)" to="(1960,1250)"/>
    <wire from="(1920,1330)" to="(1970,1330)"/>
    <wire from="(1920,650)" to="(1920,670)"/>
    <wire from="(1920,650)" to="(1940,650)"/>
    <wire from="(1930,1020)" to="(2150,1020)"/>
    <wire from="(1930,1060)" to="(1940,1060)"/>
    <wire from="(1930,290)" to="(1930,300)"/>
    <wire from="(1930,400)" to="(1930,410)"/>
    <wire from="(1940,1060)" to="(1940,1120)"/>
    <wire from="(1940,1120)" to="(2150,1120)"/>
    <wire from="(1950,130)" to="(2600,130)"/>
    <wire from="(1950,1570)" to="(2580,1570)"/>
    <wire from="(1950,1890)" to="(1990,1890)"/>
    <wire from="(1950,250)" to="(1970,250)"/>
    <wire from="(1950,260)" to="(1970,260)"/>
    <wire from="(1950,270)" to="(1970,270)"/>
    <wire from="(1950,280)" to="(1970,280)"/>
    <wire from="(1950,360)" to="(1970,360)"/>
    <wire from="(1950,370)" to="(1970,370)"/>
    <wire from="(1950,380)" to="(1970,380)"/>
    <wire from="(1950,390)" to="(1970,390)"/>
    <wire from="(1960,1040)" to="(1960,1250)"/>
    <wire from="(1960,1040)" to="(2360,1040)"/>
    <wire from="(1960,620)" to="(2600,620)"/>
    <wire from="(1970,1160)" to="(1970,1330)"/>
    <wire from="(1970,1160)" to="(2360,1160)"/>
    <wire from="(1990,240)" to="(2030,240)"/>
    <wire from="(1990,350)" to="(2030,350)"/>
    <wire from="(2010,250)" to="(2030,250)"/>
    <wire from="(2010,360)" to="(2030,360)"/>
    <wire from="(2020,1220)" to="(2020,1300)"/>
    <wire from="(2020,1220)" to="(2040,1220)"/>
    <wire from="(2020,1300)" to="(2020,1430)"/>
    <wire from="(2020,1300)" to="(2040,1300)"/>
    <wire from="(2020,1430)" to="(4120,1430)"/>
    <wire from="(2030,1980)" to="(2080,1980)"/>
    <wire from="(2050,230)" to="(2090,230)"/>
    <wire from="(2050,340)" to="(2090,340)"/>
    <wire from="(2060,270)" to="(2080,270)"/>
    <wire from="(2060,380)" to="(2080,380)"/>
    <wire from="(2080,1210)" to="(2170,1210)"/>
    <wire from="(2080,1290)" to="(2170,1290)"/>
    <wire from="(2080,250)" to="(2080,270)"/>
    <wire from="(2080,250)" to="(2090,250)"/>
    <wire from="(2080,360)" to="(2080,380)"/>
    <wire from="(2080,360)" to="(2090,360)"/>
    <wire from="(2090,1250)" to="(2090,1330)"/>
    <wire from="(2090,1250)" to="(2170,1250)"/>
    <wire from="(2090,1330)" to="(2090,1360)"/>
    <wire from="(2090,1330)" to="(2170,1330)"/>
    <wire from="(2130,240)" to="(2600,240)"/>
    <wire from="(2130,350)" to="(2600,350)"/>
    <wire from="(2150,1020)" to="(2330,1020)"/>
    <wire from="(2150,1100)" to="(2150,1120)"/>
    <wire from="(2150,1120)" to="(2350,1120)"/>
    <wire from="(2150,990)" to="(2150,1020)"/>
    <wire from="(220,940)" to="(240,940)"/>
    <wire from="(220,980)" to="(230,980)"/>
    <wire from="(2220,1230)" to="(2260,1230)"/>
    <wire from="(2220,1310)" to="(2280,1310)"/>
    <wire from="(2260,1060)" to="(2260,1230)"/>
    <wire from="(2260,1060)" to="(2530,1060)"/>
    <wire from="(2280,1170)" to="(2280,1310)"/>
    <wire from="(2280,1170)" to="(2530,1170)"/>
    <wire from="(230,1330)" to="(230,1380)"/>
    <wire from="(230,960)" to="(230,980)"/>
    <wire from="(230,960)" to="(240,960)"/>
    <wire from="(2330,1000)" to="(2330,1020)"/>
    <wire from="(2330,1000)" to="(2350,1000)"/>
    <wire from="(2340,1020)" to="(2340,1140)"/>
    <wire from="(2340,1020)" to="(2350,1020)"/>
    <wire from="(2340,1140)" to="(2340,1370)"/>
    <wire from="(2340,1140)" to="(2350,1140)"/>
    <wire from="(2340,1370)" to="(3560,1370)"/>
    <wire from="(2360,1030)" to="(2360,1040)"/>
    <wire from="(2360,1150)" to="(2360,1160)"/>
    <wire from="(2380,1010)" to="(2520,1010)"/>
    <wire from="(2380,1130)" to="(2520,1130)"/>
    <wire from="(250,1310)" to="(410,1310)"/>
    <wire from="(250,970)" to="(250,990)"/>
    <wire from="(250,970)" to="(510,970)"/>
    <wire from="(250,990)" to="(260,990)"/>
    <wire from="(2510,1030)" to="(2510,1150)"/>
    <wire from="(2510,1030)" to="(2520,1030)"/>
    <wire from="(2510,1150)" to="(2510,1410)"/>
    <wire from="(2510,1150)" to="(2520,1150)"/>
    <wire from="(2510,1410)" to="(4100,1410)"/>
    <wire from="(2530,1040)" to="(2530,1060)"/>
    <wire from="(2530,1160)" to="(2530,1170)"/>
    <wire from="(2550,1020)" to="(2610,1020)"/>
    <wire from="(2550,1140)" to="(2610,1140)"/>
    <wire from="(2560,1040)" to="(2560,1160)"/>
    <wire from="(2560,1040)" to="(2610,1040)"/>
    <wire from="(2560,1160)" to="(2560,1290)"/>
    <wire from="(2560,1160)" to="(2610,1160)"/>
    <wire from="(2560,1290)" to="(2560,1470)"/>
    <wire from="(2560,1290)" to="(2610,1290)"/>
    <wire from="(2560,1470)" to="(2620,1470)"/>
    <wire from="(2560,150)" to="(2560,260)"/>
    <wire from="(2560,150)" to="(2600,150)"/>
    <wire from="(2560,260)" to="(2560,370)"/>
    <wire from="(2560,260)" to="(2600,260)"/>
    <wire from="(2560,370)" to="(2560,510)"/>
    <wire from="(2560,370)" to="(2600,370)"/>
    <wire from="(2560,510)" to="(2560,640)"/>
    <wire from="(2560,510)" to="(2600,510)"/>
    <wire from="(2560,640)" to="(2560,800)"/>
    <wire from="(2560,640)" to="(2600,640)"/>
    <wire from="(2560,800)" to="(2560,910)"/>
    <wire from="(2560,800)" to="(2610,800)"/>
    <wire from="(2560,910)" to="(2560,1040)"/>
    <wire from="(2560,910)" to="(2610,910)"/>
    <wire from="(2580,1270)" to="(2580,1570)"/>
    <wire from="(2580,1270)" to="(2610,1270)"/>
    <wire from="(2590,1060)" to="(2590,1180)"/>
    <wire from="(2590,1060)" to="(2610,1060)"/>
    <wire from="(2590,1180)" to="(2590,1310)"/>
    <wire from="(2590,1180)" to="(2610,1180)"/>
    <wire from="(2590,1310)" to="(2590,1610)"/>
    <wire from="(2590,1310)" to="(2610,1310)"/>
    <wire from="(2590,1610)" to="(4000,1610)"/>
    <wire from="(2590,170)" to="(2590,280)"/>
    <wire from="(2590,170)" to="(2600,170)"/>
    <wire from="(2590,280)" to="(2590,390)"/>
    <wire from="(2590,280)" to="(2600,280)"/>
    <wire from="(2590,390)" to="(2590,530)"/>
    <wire from="(2590,390)" to="(2600,390)"/>
    <wire from="(2590,530)" to="(2590,660)"/>
    <wire from="(2590,530)" to="(2600,530)"/>
    <wire from="(2590,660)" to="(2590,820)"/>
    <wire from="(2590,660)" to="(2600,660)"/>
    <wire from="(2590,820)" to="(2590,930)"/>
    <wire from="(2590,820)" to="(2610,820)"/>
    <wire from="(2590,930)" to="(2590,1060)"/>
    <wire from="(2590,930)" to="(2610,930)"/>
    <wire from="(2610,800)" to="(2620,800)"/>
    <wire from="(2610,890)" to="(2620,890)"/>
    <wire from="(2640,1080)" to="(2640,1090)"/>
    <wire from="(2650,1470)" to="(2660,1470)"/>
    <wire from="(2660,130)" to="(3000,130)"/>
    <wire from="(2660,240)" to="(3020,240)"/>
    <wire from="(2660,350)" to="(3030,350)"/>
    <wire from="(2660,490)" to="(3830,490)"/>
    <wire from="(2660,620)" to="(2690,620)"/>
    <wire from="(2670,1020)" to="(2870,1020)"/>
    <wire from="(2670,1140)" to="(2690,1140)"/>
    <wire from="(2670,1270)" to="(2700,1270)"/>
    <wire from="(2670,780)" to="(2990,780)"/>
    <wire from="(2670,890)" to="(2680,890)"/>
    <wire from="(2680,860)" to="(2680,890)"/>
    <wire from="(2680,890)" to="(4020,890)"/>
    <wire from="(2690,1140)" to="(3100,1140)"/>
    <wire from="(2690,650)" to="(2690,1140)"/>
    <wire from="(2690,650)" to="(3010,650)"/>
    <wire from="(270,950)" to="(280,950)"/>
    <wire from="(2700,1150)" to="(2700,1270)"/>
    <wire from="(2700,1150)" to="(3110,1150)"/>
    <wire from="(2700,1270)" to="(2730,1270)"/>
    <wire from="(2710,860)" to="(2710,880)"/>
    <wire from="(2710,860)" to="(2720,860)"/>
    <wire from="(2710,880)" to="(2790,880)"/>
    <wire from="(2720,700)" to="(2720,860)"/>
    <wire from="(2720,700)" to="(3060,700)"/>
    <wire from="(2720,860)" to="(2730,860)"/>
    <wire from="(2790,880)" to="(2790,940)"/>
    <wire from="(2790,940)" to="(2810,940)"/>
    <wire from="(2830,930)" to="(2940,930)"/>
    <wire from="(2870,580)" to="(2870,660)"/>
    <wire from="(2870,580)" to="(3060,580)"/>
    <wire from="(2870,660)" to="(2870,970)"/>
    <wire from="(2870,660)" to="(3060,660)"/>
    <wire from="(2870,970)" to="(2870,1020)"/>
    <wire from="(2870,970)" to="(2960,970)"/>
    <wire from="(2880,1030)" to="(2900,1030)"/>
    <wire from="(2880,860)" to="(2880,1030)"/>
    <wire from="(2880,860)" to="(3300,860)"/>
    <wire from="(2890,1050)" to="(2900,1050)"/>
    <wire from="(2940,1040)" to="(2970,1040)"/>
    <wire from="(2940,930)" to="(2940,990)"/>
    <wire from="(2940,990)" to="(2960,990)"/>
    <wire from="(2970,1000)" to="(2970,1020)"/>
    <wire from="(2970,1020)" to="(2970,1040)"/>
    <wire from="(2970,1020)" to="(2990,1020)"/>
    <wire from="(2990,560)" to="(2990,780)"/>
    <wire from="(2990,560)" to="(3060,560)"/>
    <wire from="(2990,780)" to="(3300,780)"/>
    <wire from="(2990,980)" to="(3280,980)"/>
    <wire from="(300,1490)" to="(410,1490)"/>
    <wire from="(300,940)" to="(580,940)"/>
    <wire from="(3000,130)" to="(3000,680)"/>
    <wire from="(3000,680)" to="(3060,680)"/>
    <wire from="(3010,600)" to="(3010,650)"/>
    <wire from="(3010,600)" to="(3060,600)"/>
    <wire from="(3020,240)" to="(3020,640)"/>
    <wire from="(3020,640)" to="(3060,640)"/>
    <wire from="(3030,350)" to="(3030,620)"/>
    <wire from="(3030,620)" to="(3060,620)"/>
    <wire from="(310,910)" to="(390,910)"/>
    <wire from="(3100,1090)" to="(3100,1140)"/>
    <wire from="(3100,1090)" to="(3310,1090)"/>
    <wire from="(3110,1110)" to="(3110,1150)"/>
    <wire from="(3110,1110)" to="(3310,1110)"/>
    <wire from="(3280,1070)" to="(3310,1070)"/>
    <wire from="(3280,560)" to="(3300,560)"/>
    <wire from="(3280,580)" to="(3310,580)"/>
    <wire from="(3280,600)" to="(3320,600)"/>
    <wire from="(3280,620)" to="(3310,620)"/>
    <wire from="(3280,980)" to="(3280,1070)"/>
    <wire from="(3300,1020)" to="(3300,1050)"/>
    <wire from="(3300,1020)" to="(3540,1020)"/>
    <wire from="(3300,1050)" to="(3310,1050)"/>
    <wire from="(3300,530)" to="(3300,560)"/>
    <wire from="(3300,530)" to="(3350,530)"/>
    <wire from="(3300,780)" to="(3300,810)"/>
    <wire from="(3300,780)" to="(3690,780)"/>
    <wire from="(3300,810)" to="(3300,860)"/>
    <wire from="(3300,810)" to="(3340,810)"/>
    <wire from="(3300,860)" to="(3300,1020)"/>
    <wire from="(3310,560)" to="(3310,580)"/>
    <wire from="(3310,560)" to="(3350,560)"/>
    <wire from="(3310,620)" to="(3310,640)"/>
    <wire from="(3310,640)" to="(3360,640)"/>
    <wire from="(3330,830)" to="(3340,830)"/>
    <wire from="(3360,600)" to="(3370,600)"/>
    <wire from="(3380,820)" to="(3410,820)"/>
    <wire from="(340,1520)" to="(340,1560)"/>
    <wire from="(340,1520)" to="(410,1520)"/>
    <wire from="(3440,690)" to="(3520,690)"/>
    <wire from="(350,1430)" to="(350,1480)"/>
    <wire from="(350,1480)" to="(410,1480)"/>
    <wire from="(3500,710)" to="(3500,770)"/>
    <wire from="(3500,710)" to="(3520,710)"/>
    <wire from="(3500,770)" to="(3980,770)"/>
    <wire from="(3520,690)" to="(3530,690)"/>
    <wire from="(3520,710)" to="(3530,710)"/>
    <wire from="(3520,730)" to="(3520,760)"/>
    <wire from="(3520,760)" to="(4000,760)"/>
    <wire from="(3530,1050)" to="(3560,1050)"/>
    <wire from="(3540,1020)" to="(3540,1260)"/>
    <wire from="(3540,1260)" to="(3800,1260)"/>
    <wire from="(3560,1050)" to="(3560,1090)"/>
    <wire from="(3560,1050)" to="(3630,1050)"/>
    <wire from="(3560,1090)" to="(3560,1370)"/>
    <wire from="(3560,1090)" to="(3590,1090)"/>
    <wire from="(3580,690)" to="(3740,690)"/>
    <wire from="(3620,820)" to="(3660,820)"/>
    <wire from="(3630,1000)" to="(3630,1010)"/>
    <wire from="(3630,1000)" to="(3780,1000)"/>
    <wire from="(3630,1010)" to="(3630,1020)"/>
    <wire from="(3630,1010)" to="(3780,1010)"/>
    <wire from="(3630,1020)" to="(3630,1050)"/>
    <wire from="(3630,1020)" to="(3780,1020)"/>
    <wire from="(3630,1050)" to="(3630,1060)"/>
    <wire from="(3630,1050)" to="(3780,1050)"/>
    <wire from="(3630,1060)" to="(3780,1060)"/>
    <wire from="(3630,910)" to="(3630,920)"/>
    <wire from="(3630,910)" to="(3780,910)"/>
    <wire from="(3630,920)" to="(3630,930)"/>
    <wire from="(3630,920)" to="(3780,920)"/>
    <wire from="(3630,930)" to="(3630,940)"/>
    <wire from="(3630,930)" to="(3780,930)"/>
    <wire from="(3630,940)" to="(3630,950)"/>
    <wire from="(3630,940)" to="(3780,940)"/>
    <wire from="(3630,950)" to="(3630,960)"/>
    <wire from="(3630,950)" to="(3780,950)"/>
    <wire from="(3630,960)" to="(3630,970)"/>
    <wire from="(3630,960)" to="(3780,960)"/>
    <wire from="(3630,970)" to="(3630,980)"/>
    <wire from="(3630,970)" to="(3780,970)"/>
    <wire from="(3630,980)" to="(3630,990)"/>
    <wire from="(3630,980)" to="(3780,980)"/>
    <wire from="(3630,990)" to="(3630,1000)"/>
    <wire from="(3630,990)" to="(3780,990)"/>
    <wire from="(3690,670)" to="(3690,780)"/>
    <wire from="(3690,670)" to="(3740,670)"/>
    <wire from="(3690,780)" to="(4020,780)"/>
    <wire from="(3710,650)" to="(3740,650)"/>
    <wire from="(3720,620)" to="(3730,620)"/>
    <wire from="(3730,620)" to="(3730,630)"/>
    <wire from="(3730,630)" to="(3740,630)"/>
    <wire from="(3760,560)" to="(3850,560)"/>
    <wire from="(3800,1230)" to="(3800,1260)"/>
    <wire from="(3820,1070)" to="(4020,1070)"/>
    <wire from="(3830,310)" to="(3830,490)"/>
    <wire from="(3830,310)" to="(4010,310)"/>
    <wire from="(3850,480)" to="(3850,560)"/>
    <wire from="(3850,480)" to="(3910,480)"/>
    <wire from="(3890,500)" to="(3890,550)"/>
    <wire from="(3890,500)" to="(3910,500)"/>
    <wire from="(3890,550)" to="(3980,550)"/>
    <wire from="(390,1500)" to="(410,1500)"/>
    <wire from="(390,910)" to="(390,1500)"/>
    <wire from="(390,910)" to="(580,910)"/>
    <wire from="(3910,480)" to="(3920,480)"/>
    <wire from="(3910,520)" to="(3910,570)"/>
    <wire from="(3910,570)" to="(4000,570)"/>
    <wire from="(3960,630)" to="(4010,630)"/>
    <wire from="(3970,480)" to="(4010,480)"/>
    <wire from="(3980,1090)" to="(3980,1310)"/>
    <wire from="(3980,1090)" to="(4020,1090)"/>
    <wire from="(3980,1310)" to="(3980,1490)"/>
    <wire from="(3980,1310)" to="(4020,1310)"/>
    <wire from="(3980,1490)" to="(3980,1560)"/>
    <wire from="(3980,1490)" to="(4020,1490)"/>
    <wire from="(3980,1560)" to="(4020,1560)"/>
    <wire from="(3980,330)" to="(3980,500)"/>
    <wire from="(3980,330)" to="(4010,330)"/>
    <wire from="(3980,500)" to="(3980,550)"/>
    <wire from="(3980,500)" to="(4010,500)"/>
    <wire from="(3980,550)" to="(3980,650)"/>
    <wire from="(3980,550)" to="(4090,550)"/>
    <wire from="(3980,650)" to="(3980,710)"/>
    <wire from="(3980,650)" to="(4010,650)"/>
    <wire from="(3980,710)" to="(3980,770)"/>
    <wire from="(3980,710)" to="(4080,710)"/>
    <wire from="(3980,770)" to="(3980,800)"/>
    <wire from="(3980,800)" to="(3980,910)"/>
    <wire from="(3980,800)" to="(4020,800)"/>
    <wire from="(3980,910)" to="(3980,1090)"/>
    <wire from="(3980,910)" to="(4020,910)"/>
    <wire from="(3990,1290)" to="(4020,1290)"/>
    <wire from="(3990,1470)" to="(4020,1470)"/>
    <wire from="(4000,1110)" to="(4000,1330)"/>
    <wire from="(4000,1110)" to="(4020,1110)"/>
    <wire from="(4000,1330)" to="(4000,1510)"/>
    <wire from="(4000,1330)" to="(4020,1330)"/>
    <wire from="(4000,1510)" to="(4000,1610)"/>
    <wire from="(4000,1510)" to="(4020,1510)"/>
    <wire from="(4000,1610)" to="(4280,1610)"/>
    <wire from="(4000,350)" to="(4000,520)"/>
    <wire from="(4000,350)" to="(4010,350)"/>
    <wire from="(4000,520)" to="(4000,570)"/>
    <wire from="(4000,520)" to="(4010,520)"/>
    <wire from="(4000,570)" to="(4000,670)"/>
    <wire from="(4000,570)" to="(4110,570)"/>
    <wire from="(4000,670)" to="(4000,700)"/>
    <wire from="(4000,670)" to="(4010,670)"/>
    <wire from="(4000,700)" to="(4000,760)"/>
    <wire from="(4000,700)" to="(4100,700)"/>
    <wire from="(4000,760)" to="(4000,820)"/>
    <wire from="(4000,820)" to="(4000,930)"/>
    <wire from="(4000,820)" to="(4020,820)"/>
    <wire from="(4000,930)" to="(4000,1110)"/>
    <wire from="(4000,930)" to="(4020,930)"/>
    <wire from="(4010,670)" to="(4020,670)"/>
    <wire from="(4020,890)" to="(4030,890)"/>
    <wire from="(4050,1560)" to="(4060,1560)"/>
    <wire from="(4070,480)" to="(4110,480)"/>
    <wire from="(4070,630)" to="(4100,630)"/>
    <wire from="(4080,1070)" to="(4100,1070)"/>
    <wire from="(4080,1290)" to="(4330,1290)"/>
    <wire from="(4080,1470)" to="(4320,1470)"/>
    <wire from="(4080,650)" to="(4080,710)"/>
    <wire from="(4080,650)" to="(4100,650)"/>
    <wire from="(4080,780)" to="(4160,780)"/>
    <wire from="(4080,890)" to="(4120,890)"/>
    <wire from="(4090,500)" to="(4090,550)"/>
    <wire from="(4090,500)" to="(4110,500)"/>
    <wire from="(410,1310)" to="(410,1440)"/>
    <wire from="(4100,1070)" to="(4100,1410)"/>
    <wire from="(4100,1070)" to="(4320,1070)"/>
    <wire from="(4100,650)" to="(4110,650)"/>
    <wire from="(4100,670)" to="(4100,700)"/>
    <wire from="(4110,520)" to="(4110,570)"/>
    <wire from="(4110,640)" to="(4110,650)"/>
    <wire from="(4120,890)" to="(4120,1430)"/>
    <wire from="(4120,890)" to="(4290,890)"/>
    <wire from="(4160,630)" to="(4190,630)"/>
    <wire from="(4160,710)" to="(4160,780)"/>
    <wire from="(4160,710)" to="(4460,710)"/>
    <wire from="(4160,780)" to="(4280,780)"/>
    <wire from="(4170,480)" to="(4230,480)"/>
    <wire from="(4250,1090)" to="(4250,1310)"/>
    <wire from="(4250,1090)" to="(4320,1090)"/>
    <wire from="(4250,1310)" to="(4250,1420)"/>
    <wire from="(4250,1310)" to="(4330,1310)"/>
    <wire from="(4250,1420)" to="(4250,1530)"/>
    <wire from="(4250,1420)" to="(4340,1420)"/>
    <wire from="(4250,1530)" to="(4400,1530)"/>
    <wire from="(4250,800)" to="(4250,910)"/>
    <wire from="(4250,800)" to="(4280,800)"/>
    <wire from="(4250,910)" to="(4250,1090)"/>
    <wire from="(4250,910)" to="(4290,910)"/>
    <wire from="(4280,1110)" to="(4280,1330)"/>
    <wire from="(4280,1110)" to="(4320,1110)"/>
    <wire from="(4280,1330)" to="(4280,1440)"/>
    <wire from="(4280,1330)" to="(4330,1330)"/>
    <wire from="(4280,1440)" to="(4280,1610)"/>
    <wire from="(4280,1440)" to="(4340,1440)"/>
    <wire from="(4280,820)" to="(4280,930)"/>
    <wire from="(4280,930)" to="(4280,1110)"/>
    <wire from="(4280,930)" to="(4290,930)"/>
    <wire from="(4320,1400)" to="(4320,1470)"/>
    <wire from="(4320,1400)" to="(4340,1400)"/>
    <wire from="(4340,780)" to="(4420,780)"/>
    <wire from="(4350,890)" to="(4360,890)"/>
    <wire from="(4380,1070)" to="(4520,1070)"/>
    <wire from="(4390,1290)" to="(4690,1290)"/>
    <wire from="(4400,1400)" to="(4710,1400)"/>
    <wire from="(4410,1170)" to="(4420,1170)"/>
    <wire from="(4420,1090)" to="(4420,1170)"/>
    <wire from="(4420,1090)" to="(4520,1090)"/>
    <wire from="(4420,1240)" to="(4460,1240)"/>
    <wire from="(4420,620)" to="(4420,780)"/>
    <wire from="(4420,620)" to="(5070,620)"/>
    <wire from="(4420,780)" to="(4450,780)"/>
    <wire from="(4430,1530)" to="(4440,1530)"/>
    <wire from="(4450,1220)" to="(4460,1220)"/>
    <wire from="(4450,780)" to="(4450,920)"/>
    <wire from="(4450,920)" to="(4450,1220)"/>
    <wire from="(4450,920)" to="(4560,920)"/>
    <wire from="(4460,730)" to="(4460,880)"/>
    <wire from="(4460,880)" to="(4840,880)"/>
    <wire from="(4470,730)" to="(4470,870)"/>
    <wire from="(4470,870)" to="(4840,870)"/>
    <wire from="(4480,730)" to="(4480,860)"/>
    <wire from="(4480,860)" to="(4840,860)"/>
    <wire from="(4490,730)" to="(4490,850)"/>
    <wire from="(4490,850)" to="(4840,850)"/>
    <wire from="(450,870)" to="(500,870)"/>
    <wire from="(4500,1230)" to="(4530,1230)"/>
    <wire from="(4500,730)" to="(4500,840)"/>
    <wire from="(4500,840)" to="(4840,840)"/>
    <wire from="(4510,730)" to="(4510,830)"/>
    <wire from="(4510,830)" to="(4840,830)"/>
    <wire from="(4510,940)" to="(4560,940)"/>
    <wire from="(4520,730)" to="(4520,820)"/>
    <wire from="(4520,820)" to="(4840,820)"/>
    <wire from="(4530,1100)" to="(4530,1230)"/>
    <wire from="(4530,730)" to="(4530,810)"/>
    <wire from="(4530,810)" to="(4840,810)"/>
    <wire from="(4540,730)" to="(4540,800)"/>
    <wire from="(4540,800)" to="(4840,800)"/>
    <wire from="(4550,1080)" to="(4700,1080)"/>
    <wire from="(4550,730)" to="(4550,790)"/>
    <wire from="(4550,790)" to="(4840,790)"/>
    <wire from="(4560,730)" to="(4560,780)"/>
    <wire from="(4560,780)" to="(4840,780)"/>
    <wire from="(4570,730)" to="(4570,770)"/>
    <wire from="(4570,770)" to="(4840,770)"/>
    <wire from="(4580,730)" to="(4580,760)"/>
    <wire from="(4580,760)" to="(4580,890)"/>
    <wire from="(4580,760)" to="(4840,760)"/>
    <wire from="(4580,890)" to="(4900,890)"/>
    <wire from="(4590,730)" to="(4590,900)"/>
    <wire from="(4590,900)" to="(5520,900)"/>
    <wire from="(4600,730)" to="(4600,750)"/>
    <wire from="(4600,750)" to="(4840,750)"/>
    <wire from="(4600,930)" to="(4690,930)"/>
    <wire from="(4690,1100)" to="(4690,1290)"/>
    <wire from="(4690,1100)" to="(4700,1100)"/>
    <wire from="(4710,1110)" to="(4710,1400)"/>
    <wire from="(4720,930)" to="(4970,930)"/>
    <wire from="(4730,1090)" to="(4760,1090)"/>
    <wire from="(480,840)" to="(490,840)"/>
    <wire from="(490,840)" to="(490,850)"/>
    <wire from="(490,850)" to="(500,850)"/>
    <wire from="(4900,860)" to="(4900,890)"/>
    <wire from="(4900,860)" to="(5250,860)"/>
    <wire from="(5070,620)" to="(5070,710)"/>
    <wire from="(5070,710)" to="(5090,710)"/>
    <wire from="(510,880)" to="(510,970)"/>
    <wire from="(5210,730)" to="(5210,790)"/>
    <wire from="(5210,790)" to="(5250,790)"/>
    <wire from="(5220,730)" to="(5220,750)"/>
    <wire from="(5220,750)" to="(5510,750)"/>
    <wire from="(5250,830)" to="(5250,860)"/>
    <wire from="(530,860)" to="(580,860)"/>
    <wire from="(5300,810)" to="(5370,810)"/>
    <wire from="(540,1310)" to="(1000,1310)"/>
    <wire from="(540,900)" to="(540,1310)"/>
    <wire from="(540,900)" to="(580,900)"/>
    <wire from="(5510,750)" to="(5510,800)"/>
    <wire from="(5510,800)" to="(5520,800)"/>
    <wire from="(5520,840)" to="(5520,900)"/>
    <wire from="(5570,820)" to="(5580,820)"/>
    <wire from="(5580,820)" to="(5590,820)"/>
    <wire from="(650,1520)" to="(700,1520)"/>
    <wire from="(720,1540)" to="(720,1580)"/>
    <wire from="(720,1580)" to="(760,1580)"/>
    <wire from="(730,1510)" to="(750,1510)"/>
    <wire from="(730,1530)" to="(750,1530)"/>
    <wire from="(750,1500)" to="(750,1510)"/>
    <wire from="(750,1500)" to="(760,1500)"/>
    <wire from="(750,1530)" to="(750,1540)"/>
    <wire from="(750,1540)" to="(760,1540)"/>
    <wire from="(780,940)" to="(830,940)"/>
    <wire from="(830,1020)" to="(990,1020)"/>
    <wire from="(830,880)" to="(2710,880)"/>
    <wire from="(830,880)" to="(830,940)"/>
    <wire from="(830,940)" to="(830,1020)"/>
    <wire from="(880,2010)" to="(1030,2010)"/>
    <wire from="(890,1920)" to="(1060,1920)"/>
    <wire from="(890,1950)" to="(1030,1950)"/>
    <wire from="(890,1980)" to="(1040,1980)"/>
    <wire from="(900,1570)" to="(980,1570)"/>
    <wire from="(900,980)" to="(900,1570)"/>
    <wire from="(900,980)" to="(990,980)"/>
    <wire from="(930,1080)" to="(990,1080)"/>
    <wire from="(980,1570)" to="(1460,1570)"/>
    <wire from="(980,1570)" to="(980,1850)"/>
    <wire from="(980,1850)" to="(1060,1850)"/>
    <wire from="(980,1890)" to="(1060,1890)"/>
    <wire from="(990,980)" to="(1000,980)"/>
  </circuit>
  <circuit name="Registros">
    <a name="appearance" val="custom"/>
    <a name="circuit" val="Registros"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <appear>
      <rect fill="none" height="60" stroke="#000000" width="220" x="50" y="50"/>
      <polyline fill="none" points="51,81 270,81" stroke="#000000"/>
      <path d="M50,109 Q160,52 270,110" fill="none" stroke="#000000"/>
      <circ-anchor facing="east" x="270" y="60"/>
      <circ-port dir="in" pin="330,2660" x="220" y="110"/>
      <circ-port dir="in" pin="370,350" x="110" y="110"/>
      <circ-port dir="in" pin="370,410" x="150" y="110"/>
      <circ-port dir="in" pin="400,130" x="50" y="60"/>
      <circ-port dir="in" pin="400,180" x="50" y="100"/>
      <circ-port dir="in" pin="400,280" x="70" y="110"/>
      <circ-port dir="out" pin="1800,3200" x="270" y="100"/>
      <circ-port dir="out" pin="1920,70" x="270" y="60"/>
    </appear>
    <comp lib="0" loc="(1800,3200)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="op2"/>
      <a name="output" val="true"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1920,70)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="op1"/>
      <a name="output" val="true"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(330,2660)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="label" val="clk"/>
    </comp>
    <comp lib="0" loc="(370,350)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="label" val="writeDestiny"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(370,410)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="label" val="writeEnable"/>
    </comp>
    <comp lib="0" loc="(400,130)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="label" val="nOp1"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(400,180)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="label" val="nOp2"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(400,280)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="label" val="writeData"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(510,370)" name="Ground">
      <a name="facing" val="west"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="1" loc="(520,410)" name="NOT Gate"/>
    <comp lib="2" loc="(1200,110)" name="Multiplexer">
      <a name="facing" val="north"/>
      <a name="select" val="5"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(1200,3040)" name="Multiplexer">
      <a name="facing" val="south"/>
      <a name="select" val="5"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(540,880)" name="Decoder">
      <a name="select" val="5"/>
    </comp>
    <comp lib="2" loc="(580,360)" name="Multiplexer">
      <a name="width" val="5"/>
    </comp>
    <comp lib="4" loc="(1420,1090)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x21"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1420,1220)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x22"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1420,1360)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x23"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1420,1510)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x24"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1420,1660)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x25"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1420,1800)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x26"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1420,1950)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x27"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1420,2110)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x28"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1420,2260)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x29"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1420,2410)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x30"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1420,2550)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x31"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1420,380)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1420,520)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x17"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1420,670)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x18"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1420,800)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x19"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1420,940)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x20"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,1090)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x5"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,1220)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x6"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,1360)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x7"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,1510)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x8"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,1660)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x9"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,1800)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x10"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,1950)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x11"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,2110)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x12"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,2260)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x13"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,2410)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x14"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,2550)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x15"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,380)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x0"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,520)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x1"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,670)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x2"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,800)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x3"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(940,940)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x4"/>
      <a name="width" val="32"/>
    </comp>
    <wire from="(1000,1120)" to="(1090,1120)"/>
    <wire from="(1000,1250)" to="(1100,1250)"/>
    <wire from="(1000,1390)" to="(1110,1390)"/>
    <wire from="(1000,1540)" to="(1120,1540)"/>
    <wire from="(1000,1690)" to="(1130,1690)"/>
    <wire from="(1000,1830)" to="(1140,1830)"/>
    <wire from="(1000,1980)" to="(1150,1980)"/>
    <wire from="(1000,2140)" to="(1160,2140)"/>
    <wire from="(1000,2290)" to="(1170,2290)"/>
    <wire from="(1000,2440)" to="(1180,2440)"/>
    <wire from="(1000,2580)" to="(1190,2580)"/>
    <wire from="(1000,410)" to="(1040,410)"/>
    <wire from="(1000,550)" to="(1050,550)"/>
    <wire from="(1000,700)" to="(1060,700)"/>
    <wire from="(1000,830)" to="(1070,830)"/>
    <wire from="(1000,970)" to="(1080,970)"/>
    <wire from="(1040,150)" to="(1040,410)"/>
    <wire from="(1040,410)" to="(1040,3000)"/>
    <wire from="(1050,150)" to="(1050,550)"/>
    <wire from="(1050,550)" to="(1050,3000)"/>
    <wire from="(1060,150)" to="(1060,700)"/>
    <wire from="(1060,700)" to="(1060,3000)"/>
    <wire from="(1070,150)" to="(1070,830)"/>
    <wire from="(1070,830)" to="(1070,3000)"/>
    <wire from="(1080,150)" to="(1080,970)"/>
    <wire from="(1080,970)" to="(1080,3000)"/>
    <wire from="(1090,1120)" to="(1090,3000)"/>
    <wire from="(1090,150)" to="(1090,1120)"/>
    <wire from="(1100,1250)" to="(1100,3000)"/>
    <wire from="(1100,150)" to="(1100,1250)"/>
    <wire from="(1110,1390)" to="(1110,3000)"/>
    <wire from="(1110,150)" to="(1110,1390)"/>
    <wire from="(1120,150)" to="(1120,1540)"/>
    <wire from="(1120,1540)" to="(1120,3000)"/>
    <wire from="(1130,150)" to="(1130,1690)"/>
    <wire from="(1130,1690)" to="(1130,3000)"/>
    <wire from="(1140,150)" to="(1140,1830)"/>
    <wire from="(1140,1830)" to="(1140,3000)"/>
    <wire from="(1150,150)" to="(1150,1980)"/>
    <wire from="(1150,1980)" to="(1150,3000)"/>
    <wire from="(1160,150)" to="(1160,2140)"/>
    <wire from="(1160,2140)" to="(1160,3000)"/>
    <wire from="(1170,150)" to="(1170,2290)"/>
    <wire from="(1170,2290)" to="(1170,3000)"/>
    <wire from="(1180,150)" to="(1180,2440)"/>
    <wire from="(1180,2440)" to="(1180,3000)"/>
    <wire from="(1190,150)" to="(1190,2580)"/>
    <wire from="(1190,2580)" to="(1190,3000)"/>
    <wire from="(1200,1270)" to="(1420,1270)"/>
    <wire from="(1200,150)" to="(1200,350)"/>
    <wire from="(1200,1930)" to="(1200,2600)"/>
    <wire from="(1200,2600)" to="(1420,2600)"/>
    <wire from="(1200,2680)" to="(1200,3000)"/>
    <wire from="(1200,2680)" to="(1500,2680)"/>
    <wire from="(1200,3040)" to="(1200,3200)"/>
    <wire from="(1200,3200)" to="(1800,3200)"/>
    <wire from="(1200,350)" to="(1500,350)"/>
    <wire from="(1200,650)" to="(1200,1270)"/>
    <wire from="(1200,70)" to="(1200,110)"/>
    <wire from="(1200,70)" to="(1920,70)"/>
    <wire from="(1210,1140)" to="(1420,1140)"/>
    <wire from="(1210,150)" to="(1210,340)"/>
    <wire from="(1210,1920)" to="(1210,2460)"/>
    <wire from="(1210,2460)" to="(1420,2460)"/>
    <wire from="(1210,2690)" to="(1210,3000)"/>
    <wire from="(1210,2690)" to="(1510,2690)"/>
    <wire from="(1210,340)" to="(1510,340)"/>
    <wire from="(1210,640)" to="(1210,1140)"/>
    <wire from="(1220,150)" to="(1220,330)"/>
    <wire from="(1220,1910)" to="(1220,2310)"/>
    <wire from="(1220,2310)" to="(1420,2310)"/>
    <wire from="(1220,2700)" to="(1220,3000)"/>
    <wire from="(1220,2700)" to="(1520,2700)"/>
    <wire from="(1220,330)" to="(1520,330)"/>
    <wire from="(1220,630)" to="(1220,990)"/>
    <wire from="(1220,990)" to="(1420,990)"/>
    <wire from="(1230,150)" to="(1230,320)"/>
    <wire from="(1230,1900)" to="(1230,2160)"/>
    <wire from="(1230,2160)" to="(1420,2160)"/>
    <wire from="(1230,2710)" to="(1230,3000)"/>
    <wire from="(1230,2710)" to="(1530,2710)"/>
    <wire from="(1230,320)" to="(1530,320)"/>
    <wire from="(1230,620)" to="(1230,850)"/>
    <wire from="(1230,850)" to="(1420,850)"/>
    <wire from="(1240,1120)" to="(1240,1250)"/>
    <wire from="(1240,1120)" to="(1420,1120)"/>
    <wire from="(1240,1250)" to="(1240,1390)"/>
    <wire from="(1240,1250)" to="(1420,1250)"/>
    <wire from="(1240,1390)" to="(1240,1540)"/>
    <wire from="(1240,1390)" to="(1420,1390)"/>
    <wire from="(1240,150)" to="(1240,310)"/>
    <wire from="(1240,1540)" to="(1240,1690)"/>
    <wire from="(1240,1540)" to="(1420,1540)"/>
    <wire from="(1240,1690)" to="(1240,1830)"/>
    <wire from="(1240,1690)" to="(1420,1690)"/>
    <wire from="(1240,1830)" to="(1240,1980)"/>
    <wire from="(1240,1830)" to="(1420,1830)"/>
    <wire from="(1240,1980)" to="(1240,2140)"/>
    <wire from="(1240,1980)" to="(1420,1980)"/>
    <wire from="(1240,2140)" to="(1240,2290)"/>
    <wire from="(1240,2140)" to="(1420,2140)"/>
    <wire from="(1240,2290)" to="(1240,2440)"/>
    <wire from="(1240,2290)" to="(1420,2290)"/>
    <wire from="(1240,2440)" to="(1240,2580)"/>
    <wire from="(1240,2440)" to="(1420,2440)"/>
    <wire from="(1240,2580)" to="(1420,2580)"/>
    <wire from="(1240,2720)" to="(1240,3000)"/>
    <wire from="(1240,2720)" to="(1540,2720)"/>
    <wire from="(1240,310)" to="(1540,310)"/>
    <wire from="(1240,360)" to="(1240,410)"/>
    <wire from="(1240,410)" to="(1240,550)"/>
    <wire from="(1240,410)" to="(1420,410)"/>
    <wire from="(1240,550)" to="(1240,700)"/>
    <wire from="(1240,550)" to="(1420,550)"/>
    <wire from="(1240,700)" to="(1240,830)"/>
    <wire from="(1240,700)" to="(1420,700)"/>
    <wire from="(1240,830)" to="(1240,970)"/>
    <wire from="(1240,830)" to="(1420,830)"/>
    <wire from="(1240,970)" to="(1240,1120)"/>
    <wire from="(1240,970)" to="(1420,970)"/>
    <wire from="(1250,1490)" to="(1250,2000)"/>
    <wire from="(1250,150)" to="(1250,300)"/>
    <wire from="(1250,2000)" to="(1420,2000)"/>
    <wire from="(1250,2730)" to="(1250,3000)"/>
    <wire from="(1250,2730)" to="(1550,2730)"/>
    <wire from="(1250,300)" to="(1550,300)"/>
    <wire from="(1250,500)" to="(1250,720)"/>
    <wire from="(1250,720)" to="(1420,720)"/>
    <wire from="(1260,1480)" to="(1260,1850)"/>
    <wire from="(1260,150)" to="(1260,290)"/>
    <wire from="(1260,1850)" to="(1420,1850)"/>
    <wire from="(1260,2740)" to="(1260,3000)"/>
    <wire from="(1260,2740)" to="(1560,2740)"/>
    <wire from="(1260,290)" to="(1560,290)"/>
    <wire from="(1260,430)" to="(1260,480)"/>
    <wire from="(1260,430)" to="(1420,430)"/>
    <wire from="(1260,490)" to="(1260,570)"/>
    <wire from="(1260,570)" to="(1420,570)"/>
    <wire from="(1270,1470)" to="(1270,1710)"/>
    <wire from="(1270,150)" to="(1270,280)"/>
    <wire from="(1270,1710)" to="(1420,1710)"/>
    <wire from="(1270,2750)" to="(1270,3000)"/>
    <wire from="(1270,2750)" to="(1570,2750)"/>
    <wire from="(1270,280)" to="(1570,280)"/>
    <wire from="(1280,1460)" to="(1280,1560)"/>
    <wire from="(1280,150)" to="(1280,270)"/>
    <wire from="(1280,1560)" to="(1420,1560)"/>
    <wire from="(1280,270)" to="(1580,270)"/>
    <wire from="(1280,2760)" to="(1280,3000)"/>
    <wire from="(1280,2760)" to="(1580,2760)"/>
    <wire from="(1290,150)" to="(1290,260)"/>
    <wire from="(1290,260)" to="(1590,260)"/>
    <wire from="(1290,2770)" to="(1290,3000)"/>
    <wire from="(1290,2770)" to="(1590,2770)"/>
    <wire from="(1300,150)" to="(1300,250)"/>
    <wire from="(1300,250)" to="(1600,250)"/>
    <wire from="(1300,2780)" to="(1300,3000)"/>
    <wire from="(1300,2780)" to="(1600,2780)"/>
    <wire from="(1310,150)" to="(1310,240)"/>
    <wire from="(1310,240)" to="(1610,240)"/>
    <wire from="(1310,2790)" to="(1310,3000)"/>
    <wire from="(1310,2790)" to="(1610,2790)"/>
    <wire from="(1320,150)" to="(1320,230)"/>
    <wire from="(1320,230)" to="(1620,230)"/>
    <wire from="(1320,2800)" to="(1320,3000)"/>
    <wire from="(1320,2800)" to="(1620,2800)"/>
    <wire from="(1330,150)" to="(1330,220)"/>
    <wire from="(1330,220)" to="(1630,220)"/>
    <wire from="(1330,2810)" to="(1330,3000)"/>
    <wire from="(1330,2810)" to="(1630,2810)"/>
    <wire from="(1340,150)" to="(1340,210)"/>
    <wire from="(1340,210)" to="(1640,210)"/>
    <wire from="(1340,2820)" to="(1340,3000)"/>
    <wire from="(1340,2820)" to="(1640,2820)"/>
    <wire from="(1350,1010)" to="(1350,1160)"/>
    <wire from="(1350,1010)" to="(1420,1010)"/>
    <wire from="(1350,1160)" to="(1350,1290)"/>
    <wire from="(1350,1160)" to="(1420,1160)"/>
    <wire from="(1350,1290)" to="(1350,1430)"/>
    <wire from="(1350,1290)" to="(1420,1290)"/>
    <wire from="(1350,1430)" to="(1350,1580)"/>
    <wire from="(1350,1430)" to="(1420,1430)"/>
    <wire from="(1350,150)" to="(1350,200)"/>
    <wire from="(1350,1580)" to="(1350,1730)"/>
    <wire from="(1350,1580)" to="(1420,1580)"/>
    <wire from="(1350,1730)" to="(1350,1870)"/>
    <wire from="(1350,1730)" to="(1420,1730)"/>
    <wire from="(1350,1870)" to="(1350,2020)"/>
    <wire from="(1350,1870)" to="(1420,1870)"/>
    <wire from="(1350,200)" to="(1650,200)"/>
    <wire from="(1350,2020)" to="(1350,2180)"/>
    <wire from="(1350,2020)" to="(1420,2020)"/>
    <wire from="(1350,2180)" to="(1350,2330)"/>
    <wire from="(1350,2180)" to="(1420,2180)"/>
    <wire from="(1350,2330)" to="(1350,2480)"/>
    <wire from="(1350,2330)" to="(1420,2330)"/>
    <wire from="(1350,2480)" to="(1350,2620)"/>
    <wire from="(1350,2480)" to="(1420,2480)"/>
    <wire from="(1350,2620)" to="(1350,2660)"/>
    <wire from="(1350,2620)" to="(1420,2620)"/>
    <wire from="(1350,2830)" to="(1350,3000)"/>
    <wire from="(1350,2830)" to="(1650,2830)"/>
    <wire from="(1350,450)" to="(1350,590)"/>
    <wire from="(1350,450)" to="(1420,450)"/>
    <wire from="(1350,590)" to="(1350,740)"/>
    <wire from="(1350,590)" to="(1420,590)"/>
    <wire from="(1350,740)" to="(1350,870)"/>
    <wire from="(1350,740)" to="(1420,740)"/>
    <wire from="(1350,870)" to="(1350,1010)"/>
    <wire from="(1350,870)" to="(1420,870)"/>
    <wire from="(1480,1120)" to="(1550,1120)"/>
    <wire from="(1480,1250)" to="(1560,1250)"/>
    <wire from="(1480,1390)" to="(1570,1390)"/>
    <wire from="(1480,1540)" to="(1580,1540)"/>
    <wire from="(1480,1690)" to="(1590,1690)"/>
    <wire from="(1480,1830)" to="(1600,1830)"/>
    <wire from="(1480,1980)" to="(1610,1980)"/>
    <wire from="(1480,2140)" to="(1620,2140)"/>
    <wire from="(1480,2290)" to="(1630,2290)"/>
    <wire from="(1480,2440)" to="(1640,2440)"/>
    <wire from="(1480,2580)" to="(1650,2580)"/>
    <wire from="(1480,410)" to="(1500,410)"/>
    <wire from="(1480,550)" to="(1510,550)"/>
    <wire from="(1480,700)" to="(1520,700)"/>
    <wire from="(1480,830)" to="(1530,830)"/>
    <wire from="(1480,970)" to="(1540,970)"/>
    <wire from="(1500,350)" to="(1500,410)"/>
    <wire from="(1500,410)" to="(1500,2680)"/>
    <wire from="(1510,340)" to="(1510,550)"/>
    <wire from="(1510,550)" to="(1510,2690)"/>
    <wire from="(1520,330)" to="(1520,700)"/>
    <wire from="(1520,700)" to="(1520,2700)"/>
    <wire from="(1530,320)" to="(1530,830)"/>
    <wire from="(1530,830)" to="(1530,2710)"/>
    <wire from="(1540,310)" to="(1540,970)"/>
    <wire from="(1540,970)" to="(1540,2720)"/>
    <wire from="(1550,1120)" to="(1550,2730)"/>
    <wire from="(1550,300)" to="(1550,1120)"/>
    <wire from="(1560,1250)" to="(1560,2740)"/>
    <wire from="(1560,290)" to="(1560,1250)"/>
    <wire from="(1570,1390)" to="(1570,2750)"/>
    <wire from="(1570,280)" to="(1570,1390)"/>
    <wire from="(1580,1540)" to="(1580,2760)"/>
    <wire from="(1580,270)" to="(1580,1540)"/>
    <wire from="(1590,1690)" to="(1590,2770)"/>
    <wire from="(1590,260)" to="(1590,1690)"/>
    <wire from="(1600,1830)" to="(1600,2780)"/>
    <wire from="(1600,250)" to="(1600,1830)"/>
    <wire from="(1610,1980)" to="(1610,2790)"/>
    <wire from="(1610,240)" to="(1610,1980)"/>
    <wire from="(1620,2140)" to="(1620,2800)"/>
    <wire from="(1620,230)" to="(1620,2140)"/>
    <wire from="(1630,220)" to="(1630,2290)"/>
    <wire from="(1630,2290)" to="(1630,2810)"/>
    <wire from="(1640,210)" to="(1640,2440)"/>
    <wire from="(1640,2440)" to="(1640,2820)"/>
    <wire from="(1650,200)" to="(1650,2580)"/>
    <wire from="(1650,2580)" to="(1650,2830)"/>
    <wire from="(330,2660)" to="(900,2660)"/>
    <wire from="(370,350)" to="(550,350)"/>
    <wire from="(370,410)" to="(490,410)"/>
    <wire from="(400,130)" to="(1040,130)"/>
    <wire from="(400,180)" to="(470,180)"/>
    <wire from="(400,280)" to="(820,280)"/>
    <wire from="(470,180)" to="(470,3020)"/>
    <wire from="(470,3020)" to="(1040,3020)"/>
    <wire from="(510,370)" to="(550,370)"/>
    <wire from="(510,490)" to="(510,920)"/>
    <wire from="(510,490)" to="(590,490)"/>
    <wire from="(510,920)" to="(540,920)"/>
    <wire from="(520,410)" to="(560,410)"/>
    <wire from="(540,880)" to="(540,920)"/>
    <wire from="(560,380)" to="(560,410)"/>
    <wire from="(560,570)" to="(940,570)"/>
    <wire from="(560,580)" to="(810,580)"/>
    <wire from="(560,590)" to="(800,590)"/>
    <wire from="(560,600)" to="(790,600)"/>
    <wire from="(560,610)" to="(780,610)"/>
    <wire from="(560,620)" to="(770,620)"/>
    <wire from="(560,630)" to="(760,630)"/>
    <wire from="(560,640)" to="(750,640)"/>
    <wire from="(560,650)" to="(740,650)"/>
    <wire from="(560,660)" to="(730,660)"/>
    <wire from="(560,670)" to="(720,670)"/>
    <wire from="(560,680)" to="(710,680)"/>
    <wire from="(560,690)" to="(700,690)"/>
    <wire from="(560,700)" to="(690,700)"/>
    <wire from="(560,710)" to="(680,710)"/>
    <wire from="(560,720)" to="(620,720)"/>
    <wire from="(560,730)" to="(630,730)"/>
    <wire from="(560,740)" to="(640,740)"/>
    <wire from="(560,750)" to="(840,750)"/>
    <wire from="(560,760)" to="(850,760)"/>
    <wire from="(560,770)" to="(860,770)"/>
    <wire from="(560,780)" to="(870,780)"/>
    <wire from="(560,790)" to="(670,790)"/>
    <wire from="(560,800)" to="(660,800)"/>
    <wire from="(560,810)" to="(650,810)"/>
    <wire from="(560,820)" to="(640,820)"/>
    <wire from="(560,830)" to="(630,830)"/>
    <wire from="(560,840)" to="(620,840)"/>
    <wire from="(560,850)" to="(610,850)"/>
    <wire from="(560,860)" to="(600,860)"/>
    <wire from="(560,870)" to="(590,870)"/>
    <wire from="(580,360)" to="(590,360)"/>
    <wire from="(590,1930)" to="(1200,1930)"/>
    <wire from="(590,360)" to="(590,490)"/>
    <wire from="(590,870)" to="(590,1930)"/>
    <wire from="(600,1920)" to="(1210,1920)"/>
    <wire from="(600,860)" to="(600,1920)"/>
    <wire from="(610,1910)" to="(1220,1910)"/>
    <wire from="(610,850)" to="(610,1910)"/>
    <wire from="(620,1900)" to="(1230,1900)"/>
    <wire from="(620,480)" to="(1260,480)"/>
    <wire from="(620,480)" to="(620,720)"/>
    <wire from="(620,840)" to="(620,1900)"/>
    <wire from="(630,1490)" to="(1250,1490)"/>
    <wire from="(630,490)" to="(1260,490)"/>
    <wire from="(630,490)" to="(630,730)"/>
    <wire from="(630,830)" to="(630,1490)"/>
    <wire from="(640,1480)" to="(1260,1480)"/>
    <wire from="(640,500)" to="(1250,500)"/>
    <wire from="(640,500)" to="(640,740)"/>
    <wire from="(640,820)" to="(640,1480)"/>
    <wire from="(650,1470)" to="(1270,1470)"/>
    <wire from="(650,810)" to="(650,1470)"/>
    <wire from="(660,1460)" to="(1280,1460)"/>
    <wire from="(660,800)" to="(660,1460)"/>
    <wire from="(670,1410)" to="(760,1410)"/>
    <wire from="(670,790)" to="(670,1410)"/>
    <wire from="(680,2600)" to="(940,2600)"/>
    <wire from="(680,710)" to="(680,2600)"/>
    <wire from="(690,2460)" to="(940,2460)"/>
    <wire from="(690,700)" to="(690,2460)"/>
    <wire from="(700,2310)" to="(940,2310)"/>
    <wire from="(700,690)" to="(700,2310)"/>
    <wire from="(710,2160)" to="(940,2160)"/>
    <wire from="(710,680)" to="(710,2160)"/>
    <wire from="(720,2000)" to="(940,2000)"/>
    <wire from="(720,670)" to="(720,2000)"/>
    <wire from="(730,1850)" to="(940,1850)"/>
    <wire from="(730,660)" to="(730,1850)"/>
    <wire from="(740,1710)" to="(940,1710)"/>
    <wire from="(740,650)" to="(740,1710)"/>
    <wire from="(750,1560)" to="(940,1560)"/>
    <wire from="(750,640)" to="(750,1560)"/>
    <wire from="(760,1410)" to="(940,1410)"/>
    <wire from="(760,630)" to="(760,1410)"/>
    <wire from="(770,1270)" to="(940,1270)"/>
    <wire from="(770,620)" to="(770,1270)"/>
    <wire from="(780,1140)" to="(940,1140)"/>
    <wire from="(780,610)" to="(780,1140)"/>
    <wire from="(790,600)" to="(790,990)"/>
    <wire from="(790,990)" to="(940,990)"/>
    <wire from="(800,590)" to="(800,850)"/>
    <wire from="(800,850)" to="(940,850)"/>
    <wire from="(810,580)" to="(810,720)"/>
    <wire from="(810,720)" to="(940,720)"/>
    <wire from="(820,1120)" to="(820,1250)"/>
    <wire from="(820,1120)" to="(940,1120)"/>
    <wire from="(820,1250)" to="(820,1390)"/>
    <wire from="(820,1250)" to="(940,1250)"/>
    <wire from="(820,1390)" to="(820,1540)"/>
    <wire from="(820,1390)" to="(940,1390)"/>
    <wire from="(820,1540)" to="(820,1690)"/>
    <wire from="(820,1540)" to="(940,1540)"/>
    <wire from="(820,1690)" to="(820,1830)"/>
    <wire from="(820,1690)" to="(940,1690)"/>
    <wire from="(820,1830)" to="(820,1980)"/>
    <wire from="(820,1830)" to="(940,1830)"/>
    <wire from="(820,1980)" to="(820,2140)"/>
    <wire from="(820,1980)" to="(940,1980)"/>
    <wire from="(820,2140)" to="(820,2290)"/>
    <wire from="(820,2140)" to="(940,2140)"/>
    <wire from="(820,2290)" to="(820,2440)"/>
    <wire from="(820,2290)" to="(940,2290)"/>
    <wire from="(820,2440)" to="(820,2580)"/>
    <wire from="(820,2440)" to="(940,2440)"/>
    <wire from="(820,2580)" to="(940,2580)"/>
    <wire from="(820,280)" to="(820,360)"/>
    <wire from="(820,360)" to="(1240,360)"/>
    <wire from="(820,360)" to="(820,410)"/>
    <wire from="(820,410)" to="(820,550)"/>
    <wire from="(820,410)" to="(940,410)"/>
    <wire from="(820,550)" to="(820,700)"/>
    <wire from="(820,550)" to="(940,550)"/>
    <wire from="(820,700)" to="(820,830)"/>
    <wire from="(820,700)" to="(940,700)"/>
    <wire from="(820,830)" to="(820,970)"/>
    <wire from="(820,830)" to="(940,830)"/>
    <wire from="(820,970)" to="(820,1120)"/>
    <wire from="(820,970)" to="(940,970)"/>
    <wire from="(840,620)" to="(1230,620)"/>
    <wire from="(840,620)" to="(840,750)"/>
    <wire from="(850,630)" to="(1220,630)"/>
    <wire from="(850,630)" to="(850,760)"/>
    <wire from="(860,640)" to="(1210,640)"/>
    <wire from="(860,640)" to="(860,770)"/>
    <wire from="(870,650)" to="(1200,650)"/>
    <wire from="(870,650)" to="(870,780)"/>
    <wire from="(900,1010)" to="(900,1160)"/>
    <wire from="(900,1010)" to="(940,1010)"/>
    <wire from="(900,1160)" to="(900,1290)"/>
    <wire from="(900,1160)" to="(940,1160)"/>
    <wire from="(900,1290)" to="(900,1430)"/>
    <wire from="(900,1290)" to="(940,1290)"/>
    <wire from="(900,1430)" to="(900,1580)"/>
    <wire from="(900,1430)" to="(940,1430)"/>
    <wire from="(900,1580)" to="(900,1730)"/>
    <wire from="(900,1580)" to="(940,1580)"/>
    <wire from="(900,1730)" to="(900,1870)"/>
    <wire from="(900,1730)" to="(940,1730)"/>
    <wire from="(900,1870)" to="(900,2020)"/>
    <wire from="(900,1870)" to="(940,1870)"/>
    <wire from="(900,2020)" to="(900,2180)"/>
    <wire from="(900,2020)" to="(940,2020)"/>
    <wire from="(900,2180)" to="(900,2330)"/>
    <wire from="(900,2180)" to="(940,2180)"/>
    <wire from="(900,2330)" to="(900,2480)"/>
    <wire from="(900,2330)" to="(940,2330)"/>
    <wire from="(900,2480)" to="(900,2620)"/>
    <wire from="(900,2480)" to="(940,2480)"/>
    <wire from="(900,2620)" to="(900,2660)"/>
    <wire from="(900,2620)" to="(940,2620)"/>
    <wire from="(900,2660)" to="(1350,2660)"/>
    <wire from="(900,590)" to="(900,740)"/>
    <wire from="(900,590)" to="(940,590)"/>
    <wire from="(900,740)" to="(900,870)"/>
    <wire from="(900,740)" to="(940,740)"/>
    <wire from="(900,870)" to="(900,1010)"/>
    <wire from="(900,870)" to="(940,870)"/>
    <wire from="(940,1410)" to="(1420,1410)"/>
    <wire from="(940,2440)" to="(950,2440)"/>
    <wire from="(940,740)" to="(950,740)"/>
  </circuit>
  <circuit name="addr_calculator">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="addr_calculator"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(180,470)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="label" val="op_code_alu"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(190,490)" name="Constant">
      <a name="value" val="0xc"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(230,220)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="label" val="store_offset"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(230,340)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="label" val="load_offset"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(290,600)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="label" val="base"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(630,560)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="0"/>
      <a name="bit11" val="0"/>
      <a name="bit12" val="0"/>
      <a name="bit13" val="0"/>
      <a name="bit14" val="none"/>
      <a name="bit15" val="none"/>
      <a name="bit16" val="none"/>
      <a name="bit17" val="none"/>
      <a name="bit18" val="none"/>
      <a name="bit19" val="none"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="none"/>
      <a name="bit21" val="none"/>
      <a name="bit22" val="none"/>
      <a name="bit23" val="none"/>
      <a name="bit24" val="none"/>
      <a name="bit25" val="none"/>
      <a name="bit26" val="none"/>
      <a name="bit27" val="none"/>
      <a name="bit28" val="none"/>
      <a name="bit29" val="none"/>
      <a name="bit3" val="0"/>
      <a name="bit30" val="none"/>
      <a name="bit31" val="none"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="0"/>
      <a name="bit9" val="0"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(710,540)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="addr"/>
      <a name="output" val="true"/>
      <a name="width" val="14"/>
    </comp>
    <comp lib="2" loc="(340,280)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="3" loc="(260,480)" name="Comparator">
      <a name="width" val="5"/>
    </comp>
    <comp lib="3" loc="(580,560)" name="Adder">
      <a name="width" val="32"/>
    </comp>
    <wire from="(180,470)" to="(220,470)"/>
    <wire from="(190,490)" to="(220,490)"/>
    <wire from="(230,220)" to="(270,220)"/>
    <wire from="(230,340)" to="(270,340)"/>
    <wire from="(260,480)" to="(320,480)"/>
    <wire from="(270,220)" to="(270,270)"/>
    <wire from="(270,270)" to="(310,270)"/>
    <wire from="(270,290)" to="(270,340)"/>
    <wire from="(270,290)" to="(310,290)"/>
    <wire from="(290,600)" to="(430,600)"/>
    <wire from="(320,300)" to="(320,480)"/>
    <wire from="(340,280)" to="(430,280)"/>
    <wire from="(430,280)" to="(430,550)"/>
    <wire from="(430,550)" to="(540,550)"/>
    <wire from="(430,570)" to="(430,600)"/>
    <wire from="(430,570)" to="(540,570)"/>
    <wire from="(580,560)" to="(630,560)"/>
    <wire from="(650,540)" to="(710,540)"/>
  </circuit>
  <vhdl name="not_gate">library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity not_gate is
    Port ( 
        input  : in  STD_LOGIC;
        output : out STD_LOGIC
    );
end not_gate;

architecture behavioral of not_gate is
begin
    output &lt;= not input;
end behavioral;</vhdl>
  <vhdl name="ALU">LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY ALU IS
  PORT (
    	opCode	: IN std_logic_vector(4 DOWNTO 0); -- codigo de operacion (5 bits)
	op1		: IN std_logic_vector(31 DOWNTO 0); -- operando 1 (32 bits)
	op2		: IN std_logic_vector(31 DOWNTO 0); -- operando 2 (32 bits)
    	imm		: IN std_logic_vector(31 DOWNTO 0); -- immediato (32 bits)
    	result   	: OUT std_logic_vector(31 DOWNTO 0)  -- resultado de la operacion (32 bits)
  );
END ALU;

--------------------------------------------------------------------------------
-- ALU Architecture Implementation
--------------------------------------------------------------------------------

ARCHITECTURE TypeArchitecture OF ALU IS
BEGIN
    PROCESS(opCode, op1, op2)
    BEGIN
        CASE opCode IS
            WHEN "00000" =&gt; -- ADD
                result &lt;= std_logic_vector(signed(op1) + signed(op2));
            
            WHEN "00001" =&gt; -- SUB
                result &lt;= std_logic_vector(signed(op1) - signed(op2));
            
            WHEN "00010" =&gt; -- ADDI
                result &lt;= std_logic_vector(signed(op1) + signed(imm));
            
            WHEN "00011" =&gt; -- AND
                result &lt;= op1 AND op2;
            
            WHEN "00100" =&gt; -- OR
                result &lt;= op1 OR op2;
            
            WHEN "00101" =&gt; -- XOR
                result &lt;= op1 XOR op2;
            
            WHEN "00110" =&gt; -- ANDI
                result &lt;= op1 AND imm;
            
            WHEN "00111" =&gt; -- ORI
                result &lt;= op1 OR imm;

            WHEN "01000" =&gt; -- XORI
                result &lt;= op1 XOR imm;
            WHEN "01001" =&gt; -- SLL (Shift Left Logical)
	        	 result &lt;= std_logic_vector(shift_left(unsigned(op1), to_integer(unsigned(op2(4 DOWNTO 0)))));
	
	       WHEN "01010" =&gt; -- SRL (Shift Right Logical)
	        	 result &lt;= std_logic_vector(shift_right(unsigned(op1), to_integer(unsigned(op2(4 DOWNTO 0)))));
	
	       WHEN "01011" =&gt; -- SRA (Shift Right Arithmetic)
	        	 result &lt;= std_logic_vector(shift_right(signed(op1), to_integer(unsigned(op2(4 DOWNTO 0)))));
	        
	       WHEN "10010" =&gt; -- LUI
	        	result &lt;= std_logic_vector(shift_left(unsigned(imm(11 downto 0)), 12));
	
	       WHEN "10011" =&gt; -- AUIPC
	        result &lt;= std_logic_vector(
				        unsigned(op1) + unsigned("000000000000000000" &amp; imm(11 downto 0) &amp; "00")
				    );
            WHEN OTHERS =&gt;
                result &lt;= (OTHERS =&gt; '0');
        END CASE;
    END PROCESS;

END TypeArchitecture;</vhdl>
  <vhdl name="Translator">LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY Translator IS&#13;
  PORT (&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert input ports below&#13;
    opCode    	: IN  std_logic_vector(6 DOWNTO 0); -- Op Code que describe el tipo de instruccion
    funct3     	: IN  std_logic_vector(2 DOWNTO 0); -- funct3 que describe la instruccion especifica
    funct7     	: IN  std_logic_vector(6 DOWNTO 0); -- funct7 que describe la instruccion especifica (solo en R-Type)
  ------------------------------------------------------------------------------&#13;
  --Insert output ports below&#13;
    TranslatedC	: OUT std_logic_vector(4 DOWNTO 0)  -- Codigo traducido
    );&#13;
END Translator;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF Translator IS&#13;
&#13;
&#13;BEGIN
    PROCESS(opCode, funct3, funct7)
    BEGIN
        CASE opCode IS
            WHEN "0110011" =&gt; -- R-Type
                IF funct3 = "000" and funct7 = "0000000" THEN
                	TranslatedC &lt;= "00000"; 
                END IF;
                -- 	SLL
                IF funct3 = "001" and funct7 = "0000000" THEN
                	TranslatedC &lt;= "01001"; 
                END IF;
                --	SRL
                IF funct3 = "101" and funct7 = "0000000" THEN
                	TranslatedC &lt;= "01010"; 
                END IF;
                --	SRA
                IF funct3 = "101" and funct7 = "0100000" THEN
                	TranslatedC &lt;= "01011"; 
                END IF;

		  WHEN "1100011" =&gt; -- B-Type
		  	 -- BEQ
                IF funct3 = "000" and funct7 = "0000000" THEN
                	TranslatedC &lt;= "01110"; 
                END IF;
                -- BNE
                IF funct3 = "001" and funct7 = "0000000" THEN
                	TranslatedC &lt;= "01111"; 
                END IF;
                
            WHEN "1101111" =&gt; -- jal
                IF funct3 = "000" and funct7 = "0000001" THEN
                	TranslatedC &lt;= "10000"; 
                END IF;
            WHEN "1100111" =&gt; -- jalr
                IF funct3 = "000" and funct7 = "0000000" THEN
                	TranslatedC &lt;= "10001"; 
                END IF;
                
            WHEN "0110111" =&gt; -- U-Type
                -- 	LUI
                IF funct3 = "101" and funct7 = "0001001" THEN
                	TranslatedC &lt;= "10010"; 
                END IF;

            WHEN "0010111" =&gt; -- U-Type 2
                -- 	AUIPC
                IF funct3 = "000" and funct7 = "0001000" THEN
                	TranslatedC &lt;= "10011"; 
                END IF;
 
            WHEN "1110011" =&gt; -- I-Type 2
                -- 	ECALL
                IF funct3 = "000" and funct7 = "0000000" THEN
                	TranslatedC &lt;= "10100"; 
                END IF;
            WHEN "0000011" =&gt; -- Load
            IF funct3 = "010"  THEN -- sw
                	TranslatedC &lt;= "01100"; 
                END IF;
            WHEN "0100011" =&gt; -- S-Type
            	IF funct3 = "010"  THEN -- sw
                	TranslatedC &lt;= "01101"; 
                END IF;
            WHEN OTHERS =&gt;
            	TranslatedC &lt;= "11111";
        END CASE;
    END PROCESS;
&#13;
END TypeArchitecture;&#13;


</vhdl>
  <vhdl name="branch_jump">library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity branch_jump is
    port (
        opcode        : in  std_logic_vector(4 downto 0);   -- Opcode (14=beq, 15=bne, 16=jal, 17=jalr)
        op1           : in  std_logic_vector(31 downto 0);  -- Data from rs1 (used by beq/bne)
        op2           : in  std_logic_vector(31 downto 0);  -- Data from rs2 (used by beq/bne)
        branch_offset : in  std_logic_vector(12 downto 0);  -- Offset for branches (signed, 13-bit)
        jump_offset   : in  std_logic_vector(20 downto 0);  -- Offset for jumps (signed, 21-bit)
        jalr_rs1      : in  std_logic_vector(31 downto 0);  -- Base register for JALR
        jalr_offset   : in  std_logic_vector(11 downto 0);  -- Offset for JALR (signed, 12-bit)
        current_pc    : in  std_logic_vector(13 downto 0);  -- Current PC (14-bit)
        rd_write_en   : out std_logic;                      -- Enable write to rd
        rd_data       : out std_logic_vector(31 downto 0);  -- Data to write to rd
        next_pc       : out std_logic_vector(13 downto 0);  -- Next PC value
        branch_taken  : out std_logic                       -- Indicates if branch/jump taken
    );
end branch_jump;

architecture Behavioral of branch_jump is
    -- Opcode constants
    constant OP_BEQ  : std_logic_vector(4 downto 0) := "01110"; -- 14
    constant OP_BNE  : std_logic_vector(4 downto 0) := "01111"; -- 15
    constant OP_JAL  : std_logic_vector(4 downto 0) := "10000"; -- 16
    constant OP_JALR : std_logic_vector(4 downto 0) := "10001"; -- 17

    -- Internal signals
    signal is_beq, is_bne, is_jal, is_jalr : std_logic;
    signal branch_eq, take_branch          : std_logic;
    signal branch_off_ext : std_logic_vector(13 downto 0); -- Extended 13-bit branch offset
    signal jump_off_ext   : std_logic_vector(13 downto 0); -- Truncated extended 21-bit jump offset
    signal jalr_off_ext   : std_logic_vector(13 downto 0); -- Extended 12-bit JALR offset
    signal pc_plus_one    : std_logic_vector(13 downto 0);
begin

    -- Opcode decoding
    is_beq  &lt;= '1' when opcode = OP_BEQ  else '0';
    is_bne  &lt;= '1' when opcode = OP_BNE  else '0';
    is_jal  &lt;= '1' when opcode = OP_JAL  else '0';
    is_jalr &lt;= '1' when opcode = OP_JALR else '0';

    -- Branch condition
    branch_eq &lt;= '1' when op1 = op2 else '0';
    take_branch &lt;= (is_beq and branch_eq) or (is_bne and (not branch_eq));

    -- Sign-extend offsets
    branch_off_ext &lt;= std_logic_vector(resize(signed(branch_offset), 14));
    jump_off_ext   &lt;= std_logic_vector(resize(signed(jump_offset), 14));
    jalr_off_ext   &lt;= std_logic_vector(resize(signed(jalr_offset), 14));

    -- PC + 1
    pc_plus_one &lt;= std_logic_vector(unsigned(current_pc) + 1);

    -- Main logic
    process(opcode, op1, op2, branch_off_ext, jump_off_ext, jalr_off_ext,
            current_pc, take_branch, is_jal, is_jalr, pc_plus_one, jalr_rs1)
        variable jalr_target : unsigned(31 downto 0); -- para jalr
    begin
        -- Default values
        rd_write_en &lt;= '0';
        rd_data &lt;= (others =&gt; '0');
        next_pc &lt;= pc_plus_one;
        branch_taken &lt;= '0';

        if take_branch = '1' then
            -- Branch taken (BEQ or BNE)
            next_pc &lt;= std_logic_vector(unsigned(current_pc) + unsigned(branch_off_ext));
            branch_taken &lt;= '1';

        elsif is_jal = '1' then
            -- Jump and link
            rd_write_en &lt;= '1';
            rd_data &lt;= std_logic_vector(resize(unsigned(pc_plus_one), 32));
            next_pc &lt;= std_logic_vector(unsigned(current_pc) + unsigned(jump_off_ext));
            branch_taken &lt;= '1';

        elsif is_jalr = '1' then
            -- Jump and link register
            rd_write_en &lt;= '1';
            rd_data &lt;= std_logic_vector(resize(unsigned(pc_plus_one), 32));
            jalr_target := unsigned(jalr_rs1) + unsigned(jalr_off_ext);
            next_pc &lt;= std_logic_vector(jalr_target(13 downto 0)); -- truncamos a 14 bits
            branch_taken &lt;= '1';
        end if;
    end process;

end Behavioral;
</vhdl>
  <vhdl name="cache_datos">library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;
use STD.TEXTIO.ALL;
use IEEE.STD_LOGIC_TEXTIO.ALL;

entity cache_datos is
    Port (
        clk         : in  STD_LOGIC;
        reset       : in  STD_LOGIC;
        
        -- Interfaz con CPU
        cpu_addr    : in  STD_LOGIC_VECTOR(13 downto 0);
        cpu_data_in : in  STD_LOGIC_VECTOR(31 downto 0);
        cpu_data_out: out STD_LOGIC_VECTOR(31 downto 0);
        cpu_write   : in  STD_LOGIC;
        cpu_read    : in  STD_LOGIC;
        cpu_enable  : in  STD_LOGIC;
        
        -- Interfaz con RAM
        ram_addr    : out STD_LOGIC_VECTOR(13 downto 0);
        ram_data_in : in  STD_LOGIC_VECTOR(31 downto 0);
        ram_data_out: out STD_LOGIC_VECTOR(31 downto 0);
        ram_write   : out STD_LOGIC;
        ram_read    : out STD_LOGIC;
        
        -- Señales de control
        cache_hit   : out STD_LOGIC;
        cache_miss  : out STD_LOGIC;
        busy        : out STD_LOGIC;
        
        -- Monitoreo
        monitor_enable : in STD_LOGIC
    );
end cache_datos;

architecture Behavioral of cache_datos is
    
    -- Constantes
    constant CACHE_SIZE    : integer := 32;
    constant BLOCK_SIZE    : integer := 4;
    constant WORD_SIZE     : integer := 32;
    constant INDEX_BITS    : integer := 5;
    constant OFFSET_BITS   : integer := 2;
    constant TAG_BITS      : integer := 7;
    
    -- Tipos de datos
    type word_array is array (0 to BLOCK_SIZE-1) of STD_LOGIC_VECTOR(WORD_SIZE-1 downto 0);
    type cache_block is record
        valid : STD_LOGIC;
        dirty : STD_LOGIC;
        tag   : STD_LOGIC_VECTOR(TAG_BITS-1 downto 0);
        data  : word_array;
    end record;
    
    type cache_array is array (0 to CACHE_SIZE-1) of cache_block;
    
    -- Estados de la máquina de estados
    type state_type is (IDLE, CHECK_HIT, READ_MISS, WRITE_BACK, ALLOCATE, WRITE_THROUGH);
    
    -- Señales internas
    signal cache_mem : cache_array;
    signal current_state, next_state : state_type;
    
    -- Decodificación de dirección
    signal addr_tag    : STD_LOGIC_VECTOR(TAG_BITS-1 downto 0);
    signal addr_index  : STD_LOGIC_VECTOR(INDEX_BITS-1 downto 0);
    signal addr_offset : STD_LOGIC_VECTOR(OFFSET_BITS-1 downto 0);
    
    -- Señales de control internas
    signal hit_detected : STD_LOGIC;
    signal miss_detected : STD_LOGIC;
    signal current_block : cache_block;
    signal index_int : integer range 0 to CACHE_SIZE-1;
    signal offset_int : integer range 0 to BLOCK_SIZE-1;
    
    -- Contador para operaciones de bloque (extendido para dar tiempo a la última palabra)
    signal word_counter : integer range 0 to BLOCK_SIZE + 2;
    
    -- Buffer temporal para lectura con señales de control
    signal read_data_buffer : word_array;
    signal data_valid_flag : STD_LOGIC;  -- Señal para indicar que hay datos válidos
    signal ram_read_internal : STD_LOGIC; -- Señal interna para ram_read
    signal prev_ram_read : STD_LOGIC;    -- Para detectar flanco de ram_read
    
    -- Función para convertir std_logic_vector a string
    function slv_to_string(slv : STD_LOGIC_VECTOR) return string is
        variable result : string(1 to slv'length);
        variable r : integer := 1;
    begin
        for i in slv'range loop
            if slv(i) = '1' then
                result(r) := '1';
            else
                result(r) := '0';
            end if;
            r := r + 1;
        end loop;
        return result;
    end function;

begin
    
    -- Decodificación de dirección
    addr_tag    &lt;= cpu_addr(13 downto 7);
    addr_index  &lt;= cpu_addr(6 downto 2);
    addr_offset &lt;= cpu_addr(1 downto 0);
    
    index_int &lt;= to_integer(unsigned(addr_index));
    offset_int &lt;= to_integer(unsigned(addr_offset));
    current_block &lt;= cache_mem(index_int);
    
    -- Detección de hit/miss
    hit_detected &lt;= '1' when (current_block.valid = '1' and 
                             current_block.tag = addr_tag) else '0';
    miss_detected &lt;= not hit_detected;
    
    -- Asignación de salidas
    cache_hit &lt;= hit_detected when current_state = CHECK_HIT else '0';
    cache_miss &lt;= miss_detected when current_state = CHECK_HIT else '0';
    busy &lt;= '1' when current_state /= IDLE else '0';
    ram_read &lt;= ram_read_internal; -- Conectar señal interna a salida
    
    -- Máquina de estados - transiciones
    process(clk, reset)
    begin
        if reset = '1' then
            current_state &lt;= IDLE;
            word_counter &lt;= 0;
            prev_ram_read &lt;= '0';
        elsif rising_edge(clk) then
            current_state &lt;= next_state;
            prev_ram_read &lt;= ram_read_internal; -- Usar señal interna
            
            -- Manejo del contador
            if current_state = READ_MISS or current_state = WRITE_BACK then
                if (current_state = READ_MISS and word_counter &lt; BLOCK_SIZE + 1) or 
                   (current_state = WRITE_BACK and word_counter &lt; BLOCK_SIZE) then
                    word_counter &lt;= word_counter + 1;
                else
                    word_counter &lt;= 0;
                end if;
            else
                word_counter &lt;= 0;
            end if;
        end if;
    end process;
    
    -- Lógica de siguiente estado
    process(current_state, cpu_enable, cpu_read, cpu_write, hit_detected, 
            miss_detected, word_counter, current_block.dirty)
    begin
        case current_state is
            when IDLE =&gt;
                if cpu_enable = '1' and (cpu_read = '1' or cpu_write = '1') then
                    next_state &lt;= CHECK_HIT;
                else
                    next_state &lt;= IDLE;
                end if;
                
            when CHECK_HIT =&gt;
                if hit_detected = '1' then
                    if cpu_write = '1' then
                        next_state &lt;= WRITE_THROUGH;
                    else
                        next_state &lt;= IDLE;
                    end if;
                elsif miss_detected = '1' then
                    if current_block.valid = '1' and current_block.dirty = '1' then
                        next_state &lt;= WRITE_BACK;
                    else
                        next_state &lt;= READ_MISS;
                    end if;
                else
                    next_state &lt;= IDLE;
                end if;
                
            when WRITE_BACK =&gt;
                if word_counter &gt;= BLOCK_SIZE then
                    next_state &lt;= READ_MISS;
                else
                    next_state &lt;= WRITE_BACK;
                end if;
                
            when READ_MISS =&gt;
                if word_counter &gt;= BLOCK_SIZE + 1 then
                    next_state &lt;= ALLOCATE;
                else
                    next_state &lt;= READ_MISS;
                end if;
                
            when ALLOCATE =&gt;
                if cpu_write = '1' then
                    next_state &lt;= WRITE_THROUGH;
                else
                    next_state &lt;= IDLE;
                end if;
                
            when WRITE_THROUGH =&gt;
                next_state &lt;= IDLE;
                
            when others =&gt;
                next_state &lt;= IDLE;
        end case;
    end process;
    
    -- Lógica principal de la cache
    process(clk, reset)
        variable temp_block : cache_block;
        variable line : line;
    begin
        if reset = '1' then
            -- Inicializar cache
            for i in 0 to CACHE_SIZE-1 loop
                cache_mem(i).valid &lt;= '0';
                cache_mem(i).dirty &lt;= '0';
                cache_mem(i).tag &lt;= (others =&gt; '0');
                for j in 0 to BLOCK_SIZE-1 loop
                    cache_mem(i).data(j) &lt;= (others =&gt; '0');
                end loop;
            end loop;
            
            -- Inicializar buffer de lectura
            for j in 0 to BLOCK_SIZE-1 loop
                read_data_buffer(j) &lt;= (others =&gt; '0');
            end loop;
            
            -- Inicializar señales de RAM
            ram_addr &lt;= (others =&gt; '0');
            ram_data_out &lt;= (others =&gt; '0');
            ram_write &lt;= '0';
            ram_read_internal &lt;= '0';
            cpu_data_out &lt;= (others =&gt; '0');
            data_valid_flag &lt;= '0';
            
        elsif rising_edge(clk) then
            
            -- Default values
            ram_write &lt;= '0';
            ram_read_internal &lt;= '0';
            data_valid_flag &lt;= '0';
            
            case current_state is
                when IDLE =&gt;
                    ram_addr &lt;= (others =&gt; '0');
                    ram_data_out &lt;= (others =&gt; '0');
                    
                when CHECK_HIT =&gt;
                    if hit_detected = '1' and cpu_read = '1' then
                        -- Read hit
                        cpu_data_out &lt;= current_block.data(offset_int);
                        
                        if monitor_enable = '1' then
                            write(line, string'("CACHE HIT - READ: Addr=0x"));
                            write(line, slv_to_string(cpu_addr));
                            write(line, string'(" Data=0x"));
                            write(line, slv_to_string(current_block.data(offset_int)));
                            writeline(output, line);
                        end if;
                    end if;
                    
                when WRITE_BACK =&gt;
                    -- Escribir bloque sucio a RAM
                    if word_counter &lt; BLOCK_SIZE then
                        ram_addr &lt;= current_block.tag &amp; addr_index &amp; std_logic_vector(to_unsigned(word_counter, 2));
                        ram_data_out &lt;= current_block.data(word_counter);
                        ram_write &lt;= '1';
                    end if;
                    
                    if monitor_enable = '1' and word_counter = 0 then
                        write(line, string'("CACHE WRITE-BACK: Block "));
                        write(line, index_int);
                        writeline(output, line);
                    end if;
                    
                when READ_MISS =&gt;
                    -- SOLUCIÓN CORREGIDA: Manejo correcto con 2 ciclos de retraso
                    if word_counter &lt; BLOCK_SIZE then
                        -- Solicitar palabra de RAM
                        ram_addr &lt;= addr_tag &amp; addr_index &amp; std_logic_vector(to_unsigned(word_counter, 2));
                        ram_read_internal &lt;= '1';
                        
                        if monitor_enable = '1' then
                            write(line, string'("REQUESTING: word "));
                            write(line, word_counter);
                            write(line, string'(" addr=0x"));
                            write(line, slv_to_string(addr_tag &amp; addr_index &amp; std_logic_vector(to_unsigned(word_counter, 2))));
                            writeline(output, line);
                        end if;
                    end if;
                    
                    -- Capturar datos con 2 ciclos de retraso
                    -- Los datos válidos están disponibles 2 ciclos después de la solicitud
                    if word_counter &gt;= 2 and word_counter &lt;= BLOCK_SIZE + 1 then
                        read_data_buffer(word_counter - 2) &lt;= ram_data_in;
                        data_valid_flag &lt;= '1';
                        
                        if monitor_enable = '1' then
                            write(line, string'("STORING: index="));
                            write(line, word_counter - 2);
                            write(line, string'(" data=0x"));
                            write(line, slv_to_string(ram_data_in));
                            writeline(output, line);
                        end if;
                    end if;
                    
                    if monitor_enable = '1' and word_counter = 0 then
                        write(line, string'("CACHE MISS - READING: Block "));
                        write(line, index_int);
                        write(line, string'(" Tag=0x"));
                        write(line, slv_to_string(addr_tag));
                        writeline(output, line);
                    end if;
                    
                when ALLOCATE =&gt;
                    -- Actualizar la cache con todos los datos leídos
                    temp_block := cache_mem(index_int);
                    temp_block.data := read_data_buffer;
                    temp_block.valid := '1';
                    temp_block.dirty := '0';
                    temp_block.tag := addr_tag;
                    cache_mem(index_int) &lt;= temp_block;
                    
                    -- Si es lectura, proporcionar dato solicitado
                    if cpu_read = '1' then
                        cpu_data_out &lt;= read_data_buffer(offset_int);
                    end if;
                    
                    if monitor_enable = '1' then
                        write(line, string'("CACHE ALLOCATED: Block "));
                        write(line, index_int);
                        write(line, string'(" Tag=0x"));
                        write(line, slv_to_string(addr_tag));
                        write(line, string'(" Data[0]=0x"));
                        write(line, slv_to_string(read_data_buffer(0)));
                        write(line, string'(" Data[1]=0x"));
                        write(line, slv_to_string(read_data_buffer(1)));
                        write(line, string'(" Data[2]=0x"));
                        write(line, slv_to_string(read_data_buffer(2)));
                        write(line, string'(" Data[3]=0x"));
                        write(line, slv_to_string(read_data_buffer(3)));
                        writeline(output, line);
                    end if;
                    
                when WRITE_THROUGH =&gt;
                    -- Escribir en cache
                    temp_block := cache_mem(index_int);
                    temp_block.data(offset_int) := cpu_data_in;
                    temp_block.dirty := '1';
                    cache_mem(index_int) &lt;= temp_block;
                    
                    -- Escribir en RAM
                    ram_addr &lt;= cpu_addr;
                    ram_data_out &lt;= cpu_data_in;
                    ram_write &lt;= '1';
                    
                    if monitor_enable = '1' then
                        write(line, string'("CACHE WRITE: Addr=0x"));
                        write(line, slv_to_string(cpu_addr));
                        write(line, string'(" Data=0x"));
                        write(line, slv_to_string(cpu_data_in));
                        writeline(output, line);
                    end if;
                    
                when others =&gt;
                    null;
            end case;
        end if;
    end process;

end Behavioral;</vhdl>
  <vhdl name="cache_instrucciones">library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;
use STD.TEXTIO.ALL;
use IEEE.STD_LOGIC_TEXTIO.ALL;

entity cache_instrucciones is
    Port (
        clk         : in  STD_LOGIC;
        reset       : in  STD_LOGIC;
        
        -- Interfaz con CPU
        cpu_addr    : in  STD_LOGIC_VECTOR(13 downto 0);
        cpu_instruction : out STD_LOGIC_VECTOR(31 downto 0);
        cpu_read    : in  STD_LOGIC;
        cpu_enable  : in  STD_LOGIC;
        
        -- Interfaz con RAM
        ram_addr    : out STD_LOGIC_VECTOR(13 downto 0);
        ram_data_in : in  STD_LOGIC_VECTOR(31 downto 0);
        ram_read    : out STD_LOGIC;
        
        -- Señales de control
        cache_hit   : out STD_LOGIC;
        cache_miss  : out STD_LOGIC;
        busy        : out STD_LOGIC;
        
        -- Monitoreo
        monitor_enable : in STD_LOGIC
    );
end cache_instrucciones;

architecture Behavioral of cache_instrucciones is
    
    -- Constantes - Incrementamos el tamaño de bloque para más instrucciones
    constant CACHE_SIZE    : integer := 16;    -- Reducimos número de bloques
    constant BLOCK_SIZE    : integer := 8;     -- Más palabras por bloque (8 instrucciones)
    constant WORD_SIZE     : integer := 32;
    constant INDEX_BITS    : integer := 4;     -- log2(16) = 4
    constant OFFSET_BITS   : integer := 3;     -- log2(8) = 3
    constant TAG_BITS      : integer := 7;     -- 14 - 4 - 3 = 7
    
    -- Tipos de datos
    type word_array is array (0 to BLOCK_SIZE-1) of STD_LOGIC_VECTOR(WORD_SIZE-1 downto 0);
    type cache_block is record
        valid : STD_LOGIC;
        tag   : STD_LOGIC_VECTOR(TAG_BITS-1 downto 0);
        data  : word_array;
    end record;
    
    type cache_array is array (0 to CACHE_SIZE-1) of cache_block;
    
    -- Estados simplificados (solo lectura)
    type state_type is (IDLE, CHECK_HIT, READ_MISS, ALLOCATE);
    
    -- Señales internas
    signal cache_mem : cache_array;
    signal current_state, next_state : state_type;
    
    -- Decodificación de dirección
    signal addr_tag    : STD_LOGIC_VECTOR(TAG_BITS-1 downto 0);
    signal addr_index  : STD_LOGIC_VECTOR(INDEX_BITS-1 downto 0);
    signal addr_offset : STD_LOGIC_VECTOR(OFFSET_BITS-1 downto 0);
    
    -- Señales de control internas
    signal hit_detected : STD_LOGIC;
    signal miss_detected : STD_LOGIC;
    signal current_block : cache_block;
    signal index_int : integer range 0 to CACHE_SIZE-1;
    signal offset_int : integer range 0 to BLOCK_SIZE-1;
    
    -- Dirección base del bloque (alineada)
    signal block_base_addr : STD_LOGIC_VECTOR(13 downto 0);
    
    -- Contador para operaciones de bloque
    signal word_counter : integer range 0 to BLOCK_SIZE + 2;
    
    -- Buffer temporal para lectura
    signal read_data_buffer : word_array;
    signal ram_read_internal : STD_LOGIC;
    
    -- Función para convertir std_logic_vector a string
    function slv_to_string(slv : STD_LOGIC_VECTOR) return string is
        variable result : string(1 to slv'length);
        variable r : integer := 1;
    begin
        for i in slv'range loop
            if slv(i) = '1' then
                result(r) := '1';
            else
                result(r) := '0';
            end if;
            r := r + 1;
        end loop;
        return result;
    end function;

begin
    
    -- Decodificación de dirección
    addr_tag    &lt;= cpu_addr(13 downto 7);
    addr_index  &lt;= cpu_addr(6 downto 3);
    addr_offset &lt;= cpu_addr(2 downto 0);
    
    index_int &lt;= to_integer(unsigned(addr_index));
    offset_int &lt;= to_integer(unsigned(addr_offset));
    current_block &lt;= cache_mem(index_int);
    
    -- Calcular dirección base del bloque (eliminar offset para alinear)
    block_base_addr &lt;= addr_tag &amp; addr_index &amp; "000";
    
    -- Detección de hit/miss
    hit_detected &lt;= '1' when (current_block.valid = '1' and 
                             current_block.tag = addr_tag) else '0';
    miss_detected &lt;= not hit_detected;
    
    -- Asignación de salidas
    cache_hit &lt;= hit_detected when current_state = CHECK_HIT else '0';
    cache_miss &lt;= miss_detected when current_state = CHECK_HIT else '0';
    busy &lt;= '1' when current_state /= IDLE else '0';
    ram_read &lt;= ram_read_internal;
    
    -- Máquina de estados - transiciones
    process(clk, reset)
    begin
        if reset = '1' then
            current_state &lt;= IDLE;
            word_counter &lt;= 0;
        elsif rising_edge(clk) then
            current_state &lt;= next_state;
            
            -- Manejo del contador
            if current_state = READ_MISS then
                if word_counter &lt; BLOCK_SIZE + 1 then
                    word_counter &lt;= word_counter + 1;
                else
                    word_counter &lt;= 0;
                end if;
            else
                word_counter &lt;= 0;
            end if;
        end if;
    end process;
    
    -- Lógica de siguiente estado (simplificada)
    process(current_state, cpu_enable, cpu_read, hit_detected, 
            miss_detected, word_counter)
    begin
        case current_state is
            when IDLE =&gt;
                if cpu_enable = '1' and cpu_read = '1' then
                    next_state &lt;= CHECK_HIT;
                else
                    next_state &lt;= IDLE;
                end if;
                
            when CHECK_HIT =&gt;
                if hit_detected = '1' then
                    next_state &lt;= IDLE;
                elsif miss_detected = '1' then
                    next_state &lt;= READ_MISS;
                else
                    next_state &lt;= IDLE;
                end if;
                
            when READ_MISS =&gt;
                if word_counter &gt;= BLOCK_SIZE + 1 then
                    next_state &lt;= ALLOCATE;
                else
                    next_state &lt;= READ_MISS;
                end if;
                
            when ALLOCATE =&gt;
                next_state &lt;= IDLE;
                
            when others =&gt;
                next_state &lt;= IDLE;
        end case;
    end process;
    
    -- Lógica principal de la cache (solo lectura)
    process(clk, reset)
        variable temp_block : cache_block;
        variable line : line;
    begin
        if reset = '1' then
            -- Inicializar cache
            for i in 0 to CACHE_SIZE-1 loop
                cache_mem(i).valid &lt;= '0';
                cache_mem(i).tag &lt;= (others =&gt; '0');
                for j in 0 to BLOCK_SIZE-1 loop
                    cache_mem(i).data(j) &lt;= (others =&gt; '0');
                end loop;
            end loop;
            
            -- Inicializar buffer de lectura
            for j in 0 to BLOCK_SIZE-1 loop
                read_data_buffer(j) &lt;= (others =&gt; '0');
            end loop;
            
            -- Inicializar señales de RAM
            ram_addr &lt;= (others =&gt; '0');
            ram_read_internal &lt;= '0';
            cpu_instruction &lt;= (others =&gt; '0');
            
        elsif rising_edge(clk) then
            
            -- Default values
            ram_read_internal &lt;= '0';
            
            case current_state is
                when IDLE =&gt;
                    ram_addr &lt;= (others =&gt; '0');
                    
                when CHECK_HIT =&gt;
                    if hit_detected = '1' and cpu_read = '1' then
                        -- Read hit - devolver instrucción
                        cpu_instruction &lt;= current_block.data(offset_int);
                        
                        if monitor_enable = '1' then
                            write(line, string'("INSTRUCTION CACHE HIT: Addr=0x"));
                            write(line, slv_to_string(cpu_addr));
                            write(line, string'(" Instruction=0x"));
                            write(line, slv_to_string(current_block.data(offset_int)));
                            writeline(output, line);
                        end if;
                    end if;
                    
                when READ_MISS =&gt;
                    -- Leer bloque completo de instrucciones desde RAM
                    if word_counter &lt; BLOCK_SIZE then
                        -- CORREGIDO: usar dirección base del bloque + offset del contador
                        ram_addr &lt;= std_logic_vector(unsigned(block_base_addr) + to_unsigned(word_counter, 14));
                        ram_read_internal &lt;= '1';
                        
                        if monitor_enable = '1' then
                            write(line, string'("REQUESTING INSTRUCTION: word "));
                            write(line, word_counter);
                            write(line, string'(" addr=0x"));
                            write(line, slv_to_string(std_logic_vector(unsigned(block_base_addr) + to_unsigned(word_counter, 14))));
                            writeline(output, line);
                        end if;
                    end if;
                    
                    -- Capturar datos con 2 ciclos de retraso
                    if word_counter &gt;= 2 and word_counter &lt;= BLOCK_SIZE + 1 then
                        read_data_buffer(word_counter - 2) &lt;= ram_data_in;
                        
                        if monitor_enable = '1' then
                            write(line, string'("STORING INSTRUCTION: index="));
                            write(line, word_counter - 2);
                            write(line, string'(" data=0x"));
                            write(line, slv_to_string(ram_data_in));
                            writeline(output, line);
                        end if;
                    end if;
                    
                    if monitor_enable = '1' and word_counter = 0 then
                        write(line, string'("INSTRUCTION CACHE MISS: Block "));
                        write(line, index_int);
                        write(line, string'(" Tag=0x"));
                        write(line, slv_to_string(addr_tag));
                        writeline(output, line);
                    end if;
                    
                when ALLOCATE =&gt;
                    -- Actualizar la cache con todas las instrucciones leídas
                    temp_block := cache_mem(index_int);
                    temp_block.data := read_data_buffer;
                    temp_block.valid := '1';
                    temp_block.tag := addr_tag;
                    cache_mem(index_int) &lt;= temp_block;
                    
                    -- Proporcionar instrucción solicitada
                    cpu_instruction &lt;= read_data_buffer(offset_int);
                    
                    if monitor_enable = '1' then
                        write(line, string'("INSTRUCTION CACHE ALLOCATED: Block "));
                        write(line, index_int);
                        write(line, string'(" Tag=0x"));
                        write(line, slv_to_string(addr_tag));
                        write(line, string'(" Instructions loaded: "));
                        write(line, BLOCK_SIZE);
                        writeline(output, line);
                    end if;
                    
                when others =&gt;
                    null;
            end case;
        end if;
    end process;

end Behavioral;</vhdl>
</project>
